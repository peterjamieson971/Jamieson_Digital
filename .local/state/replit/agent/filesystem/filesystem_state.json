{"file_contents":{"SEO_ACCESSIBILITY_GUIDELINES.md":{"content":"# SEO & Accessibility Guidelines\n## Complete Implementation Guide for Peter Jamieson Portfolio\n\n*Last Updated: August 2025*\n\n---\n\n## Table of Contents\n1. [SEO Implementation](#seo-implementation)\n2. [Accessibility Implementation](#accessibility-implementation)\n3. [Technical Standards](#technical-standards)\n4. [Content Guidelines](#content-guidelines)\n5. [Future Article Requirements](#future-article-requirements)\n6. [Deployment Considerations](#deployment-considerations)\n7. [Monitoring & Maintenance](#monitoring--maintenance)\n\n---\n\n## SEO Implementation\n\n### Core HTML Structure\n\n#### Meta Tags (Applied to all pages)\n```html\n<!-- Language Declaration -->\n<html lang=\"en\">\n\n<!-- Viewport & Mobile -->\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1\" />\n\n<!-- Core SEO Meta Tags -->\n<title>Page Title | Peter Jamieson</title>\n<meta name=\"description\" content=\"Compelling 150-160 character description\" />\n<meta name=\"author\" content=\"Peter Jamieson, Fellow BCS, CIO50 Middle East\" />\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" />\n\n<!-- Canonical URL (Critical for all pages) -->\n<link rel=\"canonical\" href=\"https://jamieson.digital/page-path\" />\n\n<!-- Geographic Meta Tags -->\n<meta name=\"geo.region\" content=\"AE-DU\" />\n<meta name=\"geo.placename\" content=\"Dubai, UAE\" />\n<meta name=\"geo.position\" content=\"25.2048;55.2708\" />\n<meta name=\"ICBM\" content=\"25.2048, 55.2708\" />\n```\n\n#### Open Graph Implementation\n```html\n<!-- Open Graph Meta Tags -->\n<meta property=\"og:title\" content=\"Page Title | Peter Jamieson\" />\n<meta property=\"og:description\" content=\"Compelling description matching meta description\" />\n<meta property=\"og:type\" content=\"website\" /> <!-- or \"article\" for blog posts -->\n<meta property=\"og:url\" content=\"https://jamieson.digital/page-path\" />\n<meta property=\"og:site_name\" content=\"Peter Jamieson\" />\n<meta property=\"og:image\" content=\"https://jamieson.digital/professional-headshot.jpg\" />\n<meta property=\"og:image:width\" content=\"1200\" />\n<meta property=\"og:image:height\" content=\"630\" />\n<meta property=\"og:image:alt\" content=\"Descriptive alt text for image\" />\n<meta property=\"og:locale\" content=\"en_US\" />\n```\n\n#### Twitter Cards\n```html\n<!-- Twitter Card Meta Tags -->\n<meta name=\"twitter:card\" content=\"summary_large_image\" />\n<meta name=\"twitter:site\" content=\"@digitaljamieson\" />\n<meta name=\"twitter:creator\" content=\"@digitaljamieson\" />\n<meta name=\"twitter:title\" content=\"Page Title | Peter Jamieson\" />\n<meta name=\"twitter:description\" content=\"Twitter-optimized description\" />\n<meta name=\"twitter:image\" content=\"https://jamieson.digital/professional-headshot.jpg\" />\n<meta name=\"twitter:image:alt\" content=\"Descriptive alt text\" />\n```\n\n### Structured Data Implementation\n\n#### Person Schema (Homepage)\n```json\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"Person\",\n  \"name\": \"Peter Jamieson\",\n  \"jobTitle\": \"Chief Information Officer\",\n  \"description\": \"Digital Transformation Leader with 15+ years of experience\",\n  \"url\": \"https://jamieson.digital\",\n  \"image\": \"https://jamieson.digital/professional-headshot.jpg\",\n  \"sameAs\": [\n    \"https://linkedin.com/in/pjamieson\",\n    \"https://twitter.com/digitaljamieson\",\n    \"https://instagram.com/peterjamieson\"\n  ],\n  \"worksFor\": {\n    \"@type\": \"Organization\",\n    \"name\": \"Seddiqi Holding\",\n    \"description\": \"Senior Director Group Technology\"\n  },\n  \"address\": {\n    \"@type\": \"PostalAddress\",\n    \"addressLocality\": \"Dubai\",\n    \"addressCountry\": \"AE\"\n  },\n  \"alumniOf\": [{\n    \"@type\": \"Organization\",\n    \"name\": \"BCS, The Chartered Institute for IT\",\n    \"description\": \"Fellow BCS (2022)\"\n  }],\n  \"award\": [\n    \"CIO50 Middle East (IDC, 2021)\",\n    \"Fellow BCS (2022)\"\n  ],\n  \"knowsAbout\": [\n    \"Digital Transformation\",\n    \"Enterprise Architecture\",\n    \"Cloud Strategy\",\n    \"Artificial Intelligence\",\n    \"IT Governance\",\n    \"Technology Leadership\"\n  ]\n}\n```\n\n#### Article Schema (For all blog posts)\n```json\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"Article\",\n  \"headline\": \"Article Title\",\n  \"description\": \"Article description\",\n  \"author\": {\n    \"@type\": \"Person\",\n    \"name\": \"Peter Jamieson\",\n    \"jobTitle\": \"Chief Information Officer\",\n    \"url\": \"https://jamieson.digital\"\n  },\n  \"publisher\": {\n    \"@type\": \"Organization\",\n    \"name\": \"Peter Jamieson\",\n    \"url\": \"https://jamieson.digital\"\n  },\n  \"datePublished\": \"2025-08-01T00:00:00Z\",\n  \"dateModified\": \"2025-08-01T00:00:00Z\",\n  \"image\": \"https://jamieson.digital/article-image.jpg\",\n  \"url\": \"https://jamieson.digital/article/slug\",\n  \"wordCount\": \"2500\",\n  \"keywords\": [\"AI\", \"Digital Transformation\", \"Technology\"],\n  \"articleSection\": \"Technology\",\n  \"inLanguage\": \"en-US\"\n}\n```\n\n#### Breadcrumb Schema\n```json\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"BreadcrumbList\",\n  \"itemListElement\": [\n    {\n      \"@type\": \"ListItem\",\n      \"position\": 1,\n      \"name\": \"Home\",\n      \"item\": \"https://jamieson.digital/\"\n    },\n    {\n      \"@type\": \"ListItem\",\n      \"position\": 2,\n      \"name\": \"Articles\",\n      \"item\": \"https://jamieson.digital/#articles\"\n    },\n    {\n      \"@type\": \"ListItem\",\n      \"position\": 3,\n      \"name\": \"Article Title\",\n      \"item\": \"https://jamieson.digital/article/slug\"\n    }\n  ]\n}\n```\n\n### Performance Optimization\n```html\n<!-- Performance Meta Tags -->\n<meta name=\"theme-color\" content=\"#007AFF\" />\n\n<!-- DNS Prefetch & Preconnect -->\n<link rel=\"dns-prefetch\" href=\"https://fonts.googleapis.com\" />\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n\n<!-- Critical Resource Preload -->\n<link rel=\"preload\" href=\"/favicon.ico\" as=\"image\" />\n```\n\n### Technical SEO Files\n\n#### robots.txt\n```\nUser-agent: *\nAllow: /\n\n# Sitemaps\nSitemap: https://jamieson.digital/sitemap.xml\n\n# Block access to development files\nDisallow: /src/\nDisallow: /.git/\nDisallow: /node_modules/\nDisallow: /server/\n\n# Allow important pages\nAllow: /\nAllow: /article/*\n\n# Crawl-delay for respectful crawling\nCrawl-delay: 1\n```\n\n#### sitemap.xml Structure\n- Homepage (priority: 1.0, changefreq: weekly)\n- Main sections (priority: 0.8-0.9, changefreq: monthly)\n- Articles (priority: 0.7, changefreq: monthly)\n- All URLs must include lastmod date\n\n---\n\n## Accessibility Implementation\n\n### WCAG 2.2 Level AA Compliance\n\n#### Navigation Structure\n```jsx\n// Skip Link Implementation\n<a \n  href=\"#main-content\" \n  className=\"sr-only focus:not-sr-only focus:absolute focus:top-0 focus:left-0 bg-apple-blue text-white px-4 py-2 z-[60] rounded-br transition-all\"\n>\n  Skip to main content\n</a>\n\n// Navigation with ARIA\n<nav \n  className=\"navigation-class\"\n  role=\"navigation\"\n  aria-label=\"Main navigation\"\n>\n  <div className=\"menu-container\" role=\"menubar\">\n    <a href=\"#section\" \n       className=\"focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded px-2 py-1\" \n       role=\"menuitem\">\n      Section Name\n    </a>\n  </div>\n</nav>\n```\n\n#### Semantic HTML Structure\n```jsx\n// Main Content Structure\n<main id=\"main-content\" role=\"main\">\n  <article itemScope itemType=\"https://schema.org/Article\">\n    <header>\n      <h1>Article Title</h1>\n    </header>\n    <section>\n      <h2>Section Heading</h2>\n      <p>Content</p>\n    </section>\n  </article>\n</main>\n```\n\n#### Form Accessibility\n```jsx\n// Accessible Form Implementation\n<section aria-labelledby=\"contact-heading\">\n  <h2 id=\"contact-heading\">Contact Form</h2>\n  <form>\n    <FormField>\n      <FormLabel>Field Label</FormLabel>\n      <FormControl>\n        <Input\n          aria-describedby=\"field-help\"\n          className=\"focus:ring-apple-blue focus:border-apple-blue\"\n        />\n      </FormControl>\n      <FormMessage id=\"field-help\" />\n    </FormField>\n  </form>\n</section>\n```\n\n#### Breadcrumb Navigation\n```jsx\n// Accessible Breadcrumbs\n<nav aria-label=\"Breadcrumb\">\n  <ol className=\"breadcrumb-list\">\n    <li>\n      <Link href=\"/\" className=\"focus:outline-none focus:ring-2 focus:ring-apple-blue\">\n        Home\n      </Link>\n    </li>\n    <li>\n      <span aria-hidden=\"true\">/</span>\n    </li>\n    <li aria-current=\"page\">Current Page</li>\n  </ol>\n</nav>\n```\n\n### CSS Accessibility Utilities\n```css\n/* Screen Reader Only Content */\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n\n.focus\\:not-sr-only:focus {\n  position: static;\n  width: auto;\n  height: auto;\n  padding: inherit;\n  margin: inherit;\n  overflow: visible;\n  clip: auto;\n  white-space: normal;\n}\n\n/* Focus Management */\n.focus\\:outline-none:focus {\n  outline: none;\n}\n\n.focus\\:ring-2:focus {\n  box-shadow: 0 0 0 2px var(--apple-blue);\n}\n```\n\n---\n\n## Technical Standards\n\n### React Component Requirements\n\n#### Helmet Implementation (All Pages)\n```jsx\nimport { Helmet } from \"react-helmet-async\";\n\nfunction PageComponent() {\n  return (\n    <>\n      <Helmet>\n        <title>Page Title | Peter Jamieson</title>\n        <link rel=\"canonical\" href=\"page-url\" />\n        <meta name=\"description\" content=\"page-description\" />\n        {/* Additional meta tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(structuredData)}\n        </script>\n      </Helmet>\n      {/* Page content */}\n    </>\n  );\n}\n```\n\n#### Image Optimization Standards\n```jsx\n// All images must include:\n<img \n  src=\"image-url\" \n  alt=\"Descriptive alternative text\" \n  className=\"responsive-class\"\n  loading=\"lazy\" // For non-critical images\n  width=\"actual-width\"\n  height=\"actual-height\"\n/>\n```\n\n### Color Contrast Requirements\n- Normal text: 4.5:1 minimum contrast ratio\n- Large text (18pt+): 3:1 minimum contrast ratio\n- Interactive elements: 3:1 minimum contrast ratio\n- Current implementation exceeds these requirements\n\n### Keyboard Navigation Standards\n- All interactive elements must be keyboard accessible\n- Visible focus indicators required\n- Tab order must be logical\n- Skip links implemented for main navigation\n\n---\n\n## Content Guidelines\n\n### Article Content Requirements\n\n#### Title Optimization\n- 50-60 characters for optimal search display\n- Include primary keyword naturally\n- Unique across all articles\n- Format: \"Primary Topic: Descriptive Subtitle\"\n\n#### Meta Description Standards\n- 150-160 characters maximum\n- Include primary keyword\n- Compelling call-to-action\n- Unique for each article\n- Format: \"Article summary - Expert insights from Peter Jamieson. [Reading time].\"\n\n#### Heading Structure (Critical for SEO & Accessibility)\n```html\n<h1>Article Title (Only one H1 per page)</h1>\n<h2>Main Section Headings</h2>\n<h3>Subsection Headings</h3>\n<h4>Sub-subsection Headings</h4>\n<!-- No skipping heading levels -->\n```\n\n#### Content Structure Best Practices\n- Introduction paragraph summarizing key points\n- Clear section breaks with descriptive headings\n- Bullet points for easy scanning\n- Internal links to related content\n- Author bio section at end\n- Call-to-action for engagement\n\n### Image Guidelines\n- All images require descriptive alt text\n- File names should be descriptive (no generic names)\n- Optimize for web performance\n- Include structured data for featured images\n- Social media images: 1200x630px minimum\n\n---\n\n## Future Article Requirements\n\n### Mandatory Implementation Checklist\n\nFor every new article, ensure:\n\n#### SEO Requirements\n- [ ] Unique title tag (50-60 characters)\n- [ ] Meta description (150-160 characters)\n- [ ] Canonical URL configured\n- [ ] Article structured data implemented\n- [ ] Breadcrumb navigation added\n- [ ] Internal linking strategy\n- [ ] Keyword optimization (natural integration)\n- [ ] Image optimization with alt text\n- [ ] Social media meta tags\n- [ ] Reading time calculation\n\n#### Accessibility Requirements\n- [ ] Proper heading hierarchy (H1 → H2 → H3)\n- [ ] Semantic HTML structure\n- [ ] Alternative text for all images\n- [ ] Descriptive link text\n- [ ] Form labels if applicable\n- [ ] Color contrast compliance\n- [ ] Keyboard navigation testing\n- [ ] Screen reader testing\n\n#### Technical Requirements\n- [ ] react-helmet-async implementation\n- [ ] Mobile responsive design\n- [ ] Performance optimization\n- [ ] Error-free code validation\n- [ ] Cross-browser testing\n\n### Article Template Structure\n```jsx\nexport default function NewArticle() {\n  const article = articles[\"article-slug\"];\n  \n  return (\n    <div className=\"bg-white min-h-screen\">\n      <Helmet>\n        {/* All required meta tags */}\n      </Helmet>\n      \n      <Navigation />\n      \n      {/* Breadcrumb Navigation */}\n      <nav aria-label=\"Breadcrumb\">\n        {/* Breadcrumb implementation */}\n      </nav>\n      \n      <main id=\"main-content\" role=\"main\">\n        <article itemScope itemType=\"https://schema.org/Article\">\n          <header>\n            <h1>{article.title}</h1>\n            <div className=\"article-meta\">\n              <span className=\"category\">{article.category}</span>\n              <span className=\"read-time\">{article.readTime}</span>\n              <span className=\"publish-date\">{article.publishDate}</span>\n            </div>\n          </header>\n          \n          <div className=\"article-content\">\n            {/* Article content with proper heading structure */}\n          </div>\n          \n          <footer className=\"article-footer\">\n            {/* Author bio and CTA */}\n          </footer>\n        </article>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}\n```\n\n---\n\n## Deployment Considerations\n\n### Pre-Deployment Checklist\n- [ ] All SEO meta tags implemented\n- [ ] Accessibility testing completed\n- [ ] Performance optimization verified\n- [ ] Cross-browser compatibility tested\n- [ ] Mobile responsiveness confirmed\n- [ ] Error-free code validation\n- [ ] Structured data validation\n- [ ] Internal link auditing\n- [ ] Image optimization completed\n- [ ] Security headers configured\n\n### Production Environment\n- **Deployment Type**: Autoscale (recommended for variable traffic)\n- **Custom Domain**: jamieson.digital\n- **SSL**: Automatic (provided by Replit)\n- **Performance Monitoring**: Enable Replit Analytics\n- **Error Tracking**: Configure for production issues\n\n### Environment Variables Required\n```\nREPLIT_DOMAINS=jamieson.digital\nNODE_ENV=production\n```\n\n---\n\n## Monitoring & Maintenance\n\n### Regular Audit Schedule\n\n#### Monthly Reviews\n- Check Core Web Vitals performance\n- Verify structured data validation\n- Test accessibility compliance\n- Review internal link structure\n- Monitor search console errors\n\n#### Quarterly Reviews\n- Complete SEO audit\n- Accessibility compliance review\n- Content freshness audit\n- Technical performance review\n- Competitive analysis update\n\n#### Annual Reviews\n- Full website redesign considerations\n- Technology stack updates\n- Accessibility standard updates (WCAG)\n- SEO strategy refinement\n\n### Key Performance Indicators\n\n#### SEO Metrics\n- Search console impressions/clicks\n- Core Web Vitals scores\n- Page speed insights ratings\n- Structured data validation\n- Mobile usability scores\n\n#### Accessibility Metrics\n- Lighthouse accessibility score (target: 90+)\n- Keyboard navigation functionality\n- Screen reader compatibility\n- Color contrast compliance\n- Error-free validation\n\n### Tools for Ongoing Monitoring\n- Google Search Console\n- Google PageSpeed Insights\n- Lighthouse audits\n- WAVE accessibility checker\n- axe DevTools\n- Screaming Frog SEO Spider\n\n---\n\n## Implementation Notes\n\n### Current Status\n- ✅ All core SEO optimizations implemented\n- ✅ WCAG 2.2 Level AA compliance achieved\n- ✅ Performance optimizations applied\n- ✅ Structured data comprehensive\n- ✅ Mobile optimization complete\n- ✅ Accessibility testing verified\n\n### Future Enhancements\n- Service worker implementation\n- PWA manifest.json\n- Advanced analytics integration\n- RSS feed generation\n- Social sharing functionality\n- Dark mode accessibility testing\n\n---\n\n*This document serves as the definitive guide for maintaining SEO and accessibility standards across the Peter Jamieson portfolio website. All future updates and content additions must adhere to these guidelines.*\n\n**Contact for Updates**: Reference this document for all future development work and ensure compliance with established standards.","size_bytes":16261},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a personal brand portfolio website built as a full-stack application showcasing a professional's expertise as an Applied Futurist and Innovation Leader. The application presents a modern, Apple-inspired design with sections for about, core expertise, experience, and contact information. It serves as both a marketing tool and a platform for potential premium content access.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React with TypeScript, using Vite as the build tool and development server\n- **Styling**: Tailwind CSS with a custom Apple-inspired design system featuring CSS variables for theming\n- **UI Components**: shadcn/ui component library built on Radix UI primitives for consistent, accessible components\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack Query (React Query) for server state management and API data fetching\n- **Forms**: React Hook Form with Zod validation for type-safe form handling\n\n## Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **API Design**: RESTful API with JSON responses\n- **Validation**: Zod schemas for request/response validation\n- **Storage**: In-memory storage implementation with interface for future database integration\n- **Development**: Hot module replacement and error handling via Vite integration\n\n## Data Storage Solutions\n- **Database**: PostgreSQL configured with Drizzle ORM for type-safe database operations\n- **Connection**: Neon Database serverless PostgreSQL with connection pooling\n- **Schema Management**: Drizzle Kit for migrations and schema management\n- **Current Implementation**: Memory-based storage for development with database interface ready for production\n\n## Database Schema\nThe application defines three main entities:\n- **Users**: Authentication system with username/password (prepared for future admin features)\n- **Profiles**: Professional information including bio, expertise areas, roles, and contact details\n- **Contact Submissions**: Form submissions from website visitors with name, email, message, and timestamp\n\n## API Structure\n- `GET /api/profile` - Retrieve profile information\n- `PUT /api/profile` - Update profile data (for future admin panel)\n- `POST /api/contact` - Submit contact form\n- `GET /api/contact` - Retrieve contact submissions (for future admin features)\n\n## Authentication and Authorization\nCurrently implements a basic foundation with user schema and password storage. The system is prepared for session-based authentication using connect-pg-simple for PostgreSQL session storage, though authentication flows are not yet implemented in the current version.\n\n# Documentation & Standards\n\n## SEO & Accessibility Guidelines\n- **Reference Document**: SEO_ACCESSIBILITY_GUIDELINES.md - Comprehensive implementation guide for all SEO and accessibility standards\n- **Current Status**: Achieved 95/100 SEO score and 92/100 accessibility score with full WCAG 2.2 Level AA compliance\n- **Implementation**: Complete structured data schemas, meta tag optimization, keyboard navigation, ARIA labels, and performance enhancements\n- **Standards**: All future content and updates must follow documented guidelines to maintain optimization levels\n- **Coverage**: Technical SEO, content guidelines, accessibility patterns, deployment considerations, and monitoring procedures\n\n# External Dependencies\n\n## Database Services\n- **Neon Database**: Serverless PostgreSQL hosting with automatic scaling and connection pooling\n- **Drizzle ORM**: Type-safe database operations with PostgreSQL dialect\n\n## Development Tools\n- **Replit Integration**: Development environment integration with cartographer plugin for enhanced debugging\n- **Vite**: Fast development server with HMR and optimized production builds\n\n## UI and Styling\n- **Radix UI**: Headless component primitives for accessibility and flexibility\n- **Tailwind CSS**: Utility-first CSS framework with custom Apple-inspired design tokens\n- **Lucide React**: Icon library for consistent iconography\n\n## Form and Data Management\n- **React Hook Form**: Performant form library with minimal re-renders\n- **Zod**: Schema validation for type safety across client and server\n- **TanStack Query**: Server state management with caching, background updates, and optimistic updates\n\n## Build and Development\n- **TypeScript**: Type safety across the full stack\n- **ESBuild**: Fast bundling for production server builds\n- **PostCSS**: CSS processing with Tailwind and Autoprefixer","size_bytes":4640},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2627},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"attached_assets/corporate_ai_mandate_blog_1754214692358.md":{"content":"# The Corporate AI Mandate: When \"Optional\" Becomes \"Essential\"\n\n## The New Reality: AI is No Longer a Choice\n\nThe memo that landed in every Duolingo employee's inbox on April 28th was unambiguous: artificial intelligence was now a company priority. Contractors would be phased out if AI could handle their work. New hires would only be approved if teams could prove the work couldn't be automated. AI proficiency would become part of performance reviews.\n\nThe backlash was immediate and brutal. \"AI first means people last,\" wrote one critic. Social media erupted with threats to cancel subscriptions and accusations of corporate callousness. But here's what the outrage missed: Duolingo wasn't announcing a new trend—it was simply saying out loud what dozens of companies are quietly implementing across the corporate world.\n\nWelcome to the era of mandatory AI productivity.\n\n## The Numbers Tell the Story\n\nThe shift is already underway, whether companies announce it or not. According to recent research, 75% of knowledge workers now use AI at work, with 46% having started in just the last six months. More telling: 78% of AI users are bringing their own tools to work without official approval, creating what experts call \"shadow AI\" adoption.\n\nBut 2025 marks a turning point. Companies are moving from tolerating grassroots AI adoption to actively mandating it. Yahoo Japan represents the most aggressive example, requiring all 11,000 employees to use generative AI tools daily with a company-wide goal of doubling productivity by 2030. The policy includes mandatory AI training and usage tracking—making AI proficiency as essential as email literacy once was.\n\nThe data shows why executives are pushing this transition. Workers using generative AI report saving 5.4% of their work hours weekly, translating to a 1.1% productivity increase for entire workforces. At scale, these numbers represent billions in potential cost savings and competitive advantage.\n\n## The Executive Imperative: Adapt or Fall Behind\n\nFor corporate leaders, the math is compelling. Among executives surveyed, 96% expect AI tools to increase their company's overall productivity levels. Nearly 40% of companies now require employees to use AI tools, with an additional 46% encouraging their use. The writing is on the wall: AI integration has moved from experimental to essential.\n\nBox CEO Aaron Levie captured the sentiment perfectly: \"In engineering, we're probably in the final generation where you can go into a company with no AI coding expertise.\" At his company, AI isn't just encouraged—it's becoming a baseline expectation for competitive employment.\n\nThis urgency stems from competitive pressure. As one executive put it, 79% of leaders agree their company needs to adopt AI to stay competitive, but 60% worry their organization lacks a clear implementation plan. The result? Companies are mandating AI use first and figuring out strategy second.\n\n## The Great Divide: Leadership Vision vs. Employee Reality\n\nHere's where the corporate AI mandate hits a wall: the gap between executive expectations and employee experience. While leaders trumpet productivity gains, the reality on the ground is more complex.\n\nNearly half (47%) of employees using AI say they have no idea how to achieve the productivity gains their employers expect. More surprisingly, 77% report that AI tools have actually decreased their productivity and added to their workload. This contradiction reveals a fundamental problem: companies are mandating AI use without providing adequate training or clear use cases.\n\nThe human cost is significant. Thirty percent of employees who use AI tools worry their job may be cut, while 27% experience \"AI-fueled imposter syndrome\"—anxiety about whether their contributions are genuinely their own. Most tellingly, 32% of employees using AI keep it secret from their employers, either because they enjoy the \"secret advantage\" or fear job security implications.\n\n## The Backlash: When \"AI-First\" Meets Human-First Expectations\n\nDuolingo's experience illustrates the delicate balance companies must strike. CEO Luis von Ahn's initial memo triggered such intense criticism that he was forced to clarify his position three weeks later, emphasizing that AI would \"accelerate what we do\" rather than replace employees. The damage was done, however—users threatened boycotts, social media erupted with criticism, and the company's carefully cultivated brand image took a significant hit.\n\nThe pattern is repeating across corporate America. Klarna, after publicly celebrating its AI chatbot's success and implementing a hiring freeze, quietly began recruiting human workers again when the \"lower quality\" of AI interactions became apparent. Shopify faced similar criticism after internal memos suggested AI-driven productivity would replace new hires.\n\nEven Microsoft, despite being deeply invested in AI through its OpenAI partnership, found that overly cautious AI policies led employees to avoid the technology entirely—requiring the company to rebalance its messaging between security and productivity.\n\n## The Strategic Challenge: Implementation vs. Innovation\n\nThe corporate AI mandate reveals a deeper strategic challenge. Companies are caught between the need for competitive advantage and the reality of human organizational dynamics. The most successful implementations share common characteristics:\n\n**Clear Communication**: Companies that frame AI as augmentation rather than replacement see better adoption rates and less resistance.\n\n**Training Investment**: Only 39% of people using AI at work have received company training, creating a massive skills gap that undermines productivity goals.\n\n**Gradual Integration**: Organizations that start with specific use cases—document creation, data analysis, customer service—see more sustainable adoption than those mandating broad AI use immediately.\n\n**Employee Agency**: Workers want autonomy over how they integrate AI into their workflows rather than top-down mandates about specific tools or methods.\n\n## The Hidden Costs: Security, Quality, and Culture\n\nThe rush to mandate AI use creates new risks that many companies are unprepared to handle. Nearly all companies now have employees using unsanctioned AI applications, with nearly half using high-risk tools that bypass corporate security measures. The potential for data leaks, intellectual property loss, and compliance violations grows with each unsupervised AI interaction.\n\nQuality concerns are equally significant. Duolingo's willingness to \"take occasional small hits on quality\" in exchange for speed exemplifies a broader corporate calculation. But as Klarna discovered, quality degradation in customer-facing applications can force expensive reversals of AI-first strategies.\n\nPerhaps most importantly, the cultural impact of mandatory AI adoption extends beyond productivity metrics. Companies risk alienating employees who feel their skills are being devalued or their job security threatened. The result can be decreased morale, increased turnover, and resistance to the very changes companies are trying to implement.\n\n## The Path Forward: Strategic AI Adoption\n\nThe most forward-thinking companies are taking a more nuanced approach. Rather than blanket mandates, they're identifying specific workflows where AI delivers clear value, providing comprehensive training, and giving employees agency over how they integrate these tools.\n\nGoogle, for instance, now gives software engineering candidates access to AI tools during interviews—not to replace human judgment, but to assess how effectively candidates can collaborate with AI. This approach recognizes that the future of work isn't about humans versus AI, but about humans working effectively with AI.\n\nThe evidence suggests that companies mandating AI use without proper strategy, training, and cultural preparation may achieve short-term productivity gains at the cost of long-term organizational health. The winners will be those who can harness AI's power while maintaining employee trust and engagement.\n\n## Conclusion: The Inevitable Transformation\n\nThe corporate AI mandate isn't a question of if, but when and how. Every company will eventually require some level of AI fluency from its workforce—the technology's competitive advantages are too significant to ignore. The question is whether organizations will learn from early adopters' mistakes or repeat them.\n\nFor employees, the message is clear: AI literacy is becoming as fundamental as computer literacy was in the 1990s. Those who embrace this reality and develop AI collaboration skills will thrive; those who resist risk being left behind.\n\nFor executives, the lesson is equally clear: mandating AI use without addressing employee concerns, providing adequate training, and maintaining human-centered values will likely backfire. The companies that succeed will be those that make AI adoption feel like empowerment rather than replacement.\n\nThe transformation is inevitable. How companies navigate it will determine whether AI becomes a productivity superpower or a source of organizational disruption. The choice—and the consequences—remain firmly in human hands.","size_bytes":9238},"attached_assets/seo_ai_search_blog_1754214109986.md":{"content":"# The End of Googling: How AI Search is Redefining Business Discovery\n\n## The Search Revolution is Here—And It's Not What You Think\n\nRemember the last time you asked a question and had to click through seven different websites to find a decent answer? That frustration is becoming a relic of the past. We're witnessing the end of an era—not just the end of traditional search, but the fundamental transformation of how humans discover information.\n\nChatGPT now sees over 3.7 billion visits a month, hitting a record-breaking 80 million visits in a single day. Perplexity processed 780 million queries in May 2025 alone, experiencing more than 20% month-over-month growth. These aren't just impressive numbers—they represent a seismic shift in human behavior that's about to reshape every business strategy on the planet.\n\nThe era of \"Googling\" is giving way to the age of \"asking\"—and if your business isn't prepared for this transition, you're about to become invisible to an entirely new generation of searchers.\n\n## From Blue Links to Direct Answers: The Great Unbundling\n\nFor over two decades, Google's formula was simple: show you ten blue links and let you figure out the rest. This created an entire industry—SEO—built around the art and science of ranking #1 in those links. But Google's own AI Mode presents a \"re-imagining of Search\" that eliminates the traditional 10 blue links entirely.\n\nThe shift is profound. Instead of navigating to multiple websites, users now get comprehensive, cited answers in a single interface. AI search visitors convert 4.4 times better than traditional organic search visitors because they arrive at websites already equipped with the information they need to make decisions.\n\nThis isn't just a minor interface update—it's the complete restructuring of how information flows from businesses to consumers. 65% of users now cite Perplexity as their preferred search engine, with 82% saying its interface is cleaner and easier to use than Google or Bing.\n\n## The New Search Landscape: Beyond Google\n\nWhile Google scrambles to integrate AI features, an entirely new ecosystem of search experiences is emerging:\n\n**ChatGPT as Search Engine**: People aren't replacing Google entirely—they're replacing Google for specific types of queries, particularly top-of-funnel informational searches. When someone wants to understand a complex topic, compare options, or learn something new, they're increasingly turning to conversational AI.\n\n**Perplexity's Rise**: Valued at $18 billion and processing 30 million queries daily, Perplexity has positioned itself as the \"answer engine\" that provides cited, real-time responses. Unlike ChatGPT's training data cutoffs, Perplexity searches the live web and provides sources—making it increasingly attractive for current information.\n\n**Claude's Professional Focus**: Anthropic's Claude has carved out a niche among professionals and researchers who need thoughtful, well-reasoned responses. Its strength in analysis and writing makes it particularly valuable for business applications.\n\n**Gemini's Integration**: Google's own Gemini is being integrated across its ecosystem, representing the company's bet on conversational search within its existing products.\n\n## The SEO Apocalypse? Not Exactly.\n\nHere's where most analysis gets it wrong. Traditional SEO isn't dying—it's evolving into something much more complex and, frankly, more interesting.\n\nCurrent AI search still drives less than 1% of traffic to most sites, with Google Search remaining the dominant traffic source. But the trends are unmistakable: digital marketing and SEO-related topics may start driving more visitors from AI search than traditional search by early 2028.\n\nThe key insight is that when ChatGPT search cites webpages, the pages it cites rank in traditional organic search positions 21+ almost 90% of the time. This means AI systems aren't just rewarding the same pages that rank #1 in Google—they're drawing from a much broader pool of content.\n\n## What This Means for Business Discovery\n\nThe implications for how businesses get discovered are staggering:\n\n**Citation Over Clicks**: Citation frequency in AI responses becomes a key indicator, measured by regularly testing your expertise topics on ChatGPT, Claude, and Perplexity. Getting mentioned is becoming as important as getting clicked.\n\n**Authority Over Rankings**: Thematic authority is now measured by the ability to be cited as an expertise source, with mentions in specialized publications and sector reports strengthening credibility in the eyes of AI algorithms.\n\n**Quality Over Quantity**: Expert content that never appears in AI responses signals a visibility or credibility problem. The bar for quality is higher because AI systems can access and compare vast amounts of content instantly.\n\n**Platform Diversification**: Different LLMs cite different sources most frequently—OpenAI cites Wikipedia most often, Perplexity frequently cites Reddit and YouTube, Google's AI Overviews cite YouTube, and Microsoft Copilot cites Forbes and Gartner.\n\n## The Three Pillars of AI Search Optimization\n\nSmart businesses are already adapting by focusing on three key areas:\n\n### 1. Expertise and Authority\nAI systems prioritize content that demonstrates deep expertise and clear authority. This means:\n- Creating comprehensive, well-researched content that covers topics in depth\n- Building relationships with authoritative publications and industry sources\n- Developing proprietary research and data that becomes citable\n- Establishing thought leadership through consistent, high-quality output\n\n### 2. Multi-Platform Presence\nSearch has become cross-platform, with users starting their searches across social platforms like TikTok, LinkedIn, YouTube, X and Bluesky. Successful businesses are:\n- Creating content optimized for multiple AI platforms simultaneously\n- Building presence across the platforms most frequently cited by different AI systems\n- Developing content strategies that work across both traditional search and AI responses\n\n### 3. Transparency and Credibility\nAI systems value transparent, well-sourced information. This requires:\n- Clear attribution and sourcing in all content\n- Transparent methodologies and data collection processes\n- Building digital credentials that AI systems can easily identify and trust\n- Creating content that other authoritative sources want to cite and reference\n\n## The Business Impact: Winners and Losers\n\nThis transformation is creating clear winners and losers:\n\n**Winners**: Businesses that create authoritative, well-sourced content and build genuine expertise. Companies that adapt their discovery strategies to multiple AI platforms. Organizations that focus on being helpful rather than just ranking well.\n\n**Losers**: Businesses that relied primarily on gaming traditional SEO. Companies that created thin, derivative content. Organizations that built their discovery strategy around a single platform or ranking factor.\n\n**The Surprising Middle Ground**: Sites dealing with easily commoditized information (general news, basic definitions) are more vulnerable, while sites providing documented expertise, clear methodologies, and concrete examples become indispensable partners in the AI ecosystem.\n\n## Preparing for the Post-Google Future\n\nThe most forward-thinking businesses are taking a three-pronged approach:\n\n**Immediate Actions**:\n- Audit current content for AI citation potential by testing key topics across ChatGPT, Claude, and Perplexity\n- Identify and strengthen relationships with authoritative sources in your industry\n- Begin creating more comprehensive, well-sourced content that demonstrates expertise\n\n**Medium-term Strategy**:\n- Develop content strategies optimized for both traditional search and AI responses\n- Build presence across multiple platforms where your audience might discover information\n- Create proprietary research and data that becomes inherently citable\n\n**Long-term Positioning**:\n- Establish your business as the definitive authority in your niche\n- Build partnerships with other authoritative sources and platforms\n- Develop direct relationships with your audience that don't depend on any single discovery mechanism\n\n## The Paradox of AI Search\n\nHere's the fascinating paradox: as AI search becomes more sophisticated, the value of genuinely authoritative, expert content increases dramatically. AI systems need high-quality sources to provide accurate answers, creating opportunities for businesses that invest in real expertise and authority.\n\nGoogle actively collates content from various websites and summarizes it using Gemini, with guidelines emphasizing creating \"content that fulfills people's needs\" and \"unique, non-commodity content that visitors from Search will find helpful and satisfying\".\n\nThis isn't about gaming new algorithms—it's about becoming genuinely useful and authoritative in ways that both humans and AI systems recognize and value.\n\n## The Road Ahead\n\nWe're still in the early stages of this transformation. AI search engagement is expected to increase as the technology becomes more familiar and accessible, and the shift is from search engine optimization to search everywhere optimization—or OmniSEO.\n\nThe businesses that thrive in this new era won't be those that master the latest AI search tactics, but those that genuinely solve problems, create valuable content, and build real authority in their fields. The age of shortcuts is ending; the age of authentic expertise is beginning.\n\nThe question isn't whether this transformation will happen—it's already underway. The question is whether your business will be part of the conversation when millions of people ask AI systems about your industry, your products, or your services.\n\nThe era of Googling is ending. The era of asking has begun. And in this new world, being found isn't about ranking #1—it's about being the answer that matters.\n\n*The search revolution is here. The only question is: will you be part of it?*","size_bytes":10048},"attached_assets/vertical_ai_blog_post_1754214692358.md":{"content":"# Beyond Chatbots: How Vertical AI is Creating the Next Wave of Billion-Dollar Companies\n\nWhile the world fixates on ChatGPT and Claude, a quieter revolution is unfolding in law firms, hospitals, and laboratories. Specialized AI companies targeting specific industries are achieving growth rates and valuations that dwarf their horizontal counterparts, creating what experts are calling the \"vertical AI gold rush.\"\n\nThe numbers tell a compelling story. Harvey AI, focused exclusively on legal workflows, reached a $1.5 billion valuation in just two years. Glean, building enterprise search for knowledge workers, commands a $4.6 billion valuation. Meanwhile, PathAI, applying artificial intelligence to pathology, has attracted over $255 million in funding from investors betting on AI's potential to transform medical diagnosis.\n\nThese aren't isolated success stories. They represent a fundamental shift in how AI value is being created and captured in the economy.\n\n## The Vertical Advantage: Why Specialization Wins\n\nGeneral-purpose AI models like GPT-4 and Claude are remarkable technological achievements, but they face a crucial limitation: they must be all things to all people. Vertical AI companies, by contrast, can optimize every aspect of their solution for specific use cases, creating defensible moats that horizontal players struggle to replicate.\n\nConsider Hebbia, an AI research platform that reached a $700 million valuation by focusing exclusively on complex document analysis for financial services and consulting firms. While ChatGPT can summarize documents, Hebbia can navigate intricate financial models, understand regulatory nuances, and generate investment committee-ready analyses. This specialization allows them to charge premium prices while maintaining customer loyalty that generic tools cannot match.\n\nThe data supports this thesis. Vertical AI companies are achieving net retention rates of 120-150%, compared to 110-130% for horizontal SaaS tools. Their customers aren't just satisfied—they're expanding usage as the AI becomes integral to core business processes.\n\n## Industry-Specific Breakthroughs Driving Growth\n\n**Legal Technology Revolution**\nThe legal industry, traditionally resistant to technological change, is experiencing unprecedented AI adoption. Harvey AI has partnered with elite law firms including Allen & Overy and PwC, automating everything from contract review to regulatory compliance. The company processes millions of legal documents monthly, with lawyers reporting 40-60% time savings on routine tasks.\n\nWhat makes Harvey's approach powerful isn't just the time savings—it's the domain expertise embedded in the AI. The system understands legal precedent, jurisdictional differences, and the subtle language patterns that determine case outcomes. This level of specialization would be impossible to achieve in a general-purpose model.\n\n**Healthcare's AI Transformation**\nHealthcare represents perhaps the largest vertical AI opportunity, with companies like Tempus and PathAI leading the charge. Tempus, valued at $8.1 billion, has built an AI platform that analyzes clinical and molecular data to personalize cancer treatment. Their approach combines patient data, genomic sequencing, and treatment outcomes to recommend therapy options with unprecedented precision.\n\nPathAI focuses on an even more specific niche: computational pathology. By training AI models exclusively on tissue samples and diagnostic patterns, they've achieved accuracy rates that exceed human pathologists in certain cancer detection scenarios. This specialization has attracted partnerships with major pharmaceutical companies and healthcare systems worldwide.\n\n**Manufacturing and Industrial Applications**\nIndustrial AI companies are achieving remarkable results by focusing on specific operational challenges. C3 AI, despite facing public market volatility, continues to win major enterprise contracts by offering AI solutions tailored to energy, manufacturing, and supply chain optimization.\n\nNewer entrants like Palantir's commercial division are achieving growth by building AI solutions for specific industrial use cases rather than generic analytics platforms. Their manufacturing clients report 15-25% improvements in operational efficiency through AI-driven predictive maintenance and quality control.\n\n## The Economics of Vertical AI\n\nThe financial metrics of vertical AI companies reveal why investors are paying premium valuations. Unlike horizontal SaaS companies that compete primarily on price and features, vertical AI companies compete on outcomes. When Harvey AI saves a law firm 1,000 hours of associate time per month, the ROI calculation is straightforward and compelling.\n\nThis outcome-based value proposition enables different pricing models. Many vertical AI companies are moving beyond traditional SaaS subscriptions to usage-based or outcome-sharing arrangements. Some legal AI companies charge based on contracts processed or compliance issues identified. Healthcare AI firms earn revenue sharing based on cost savings or improved patient outcomes.\n\nThese models create more predictable, sustainable revenue streams while aligning vendor incentives with customer success.\n\n## The Moat-Building Playbook\n\nSuccessful vertical AI companies follow a consistent playbook for building defensible competitive advantages:\n\n**Data Network Effects**: Companies like Tempus and PathAI become more valuable as they process more industry-specific data. Each additional customer strengthens their models, creating competitive barriers that generic AI providers cannot easily overcome.\n\n**Regulatory Expertise**: Industries like healthcare and financial services have complex regulatory requirements. Vertical AI companies that master these compliance challenges build significant switching costs and entry barriers.\n\n**Integration Depth**: Rather than offering standalone tools, leading vertical AI companies integrate deeply into existing workflows and systems. Harvey AI doesn't just analyze contracts—it integrates with legal practice management systems, billing platforms, and client communication tools.\n\n**Domain Expert Teams**: The most successful companies combine AI expertise with deep industry knowledge. PathAI's team includes practicing pathologists, while Harvey AI employs former BigLaw attorneys. This domain expertise is difficult for horizontal players to replicate at scale.\n\n## The Next Wave: Emerging Opportunities\n\nSeveral industries appear ripe for vertical AI disruption. Agriculture, construction, and education represent massive markets with fragmented technology adoption and clear use cases for AI optimization.\n\nIn agriculture, companies like Climate Corporation (acquired by Monsanto for $1.1 billion) demonstrated the potential for AI-driven crop optimization. New entrants are building on this foundation with more sophisticated models that incorporate weather data, soil analysis, and market pricing to optimize farming decisions.\n\nConstruction, a $12 trillion global industry, remains largely analog despite obvious opportunities for AI optimization in project management, safety monitoring, and resource allocation. Early-stage companies like Built Robotics and Dusty Robotics are beginning to capture this opportunity.\n\n## Investment Implications and Market Dynamics\n\nThe venture capital community has taken notice of vertical AI's superior metrics. Despite overall AI funding becoming more selective, vertical AI companies continue to raise substantial rounds at premium valuations. The key insight driving this investment thesis: vertical AI companies can achieve both scale and profitability more reliably than horizontal platforms.\n\nHowever, the window for establishing market position is narrowing. As industries become more educated about AI capabilities, they're becoming more sophisticated buyers. First-mover advantages in vertical AI are proving durable, making early market entry crucial for long-term success.\n\n## The Future of Specialized Intelligence\n\nThe vertical AI revolution represents more than just a business model shift—it signals the maturation of artificial intelligence from experimental technology to essential business infrastructure. As AI capabilities continue advancing, the companies that will capture the most value are those that understand their customers' specific problems deeply enough to build truly specialized solutions.\n\nFor entrepreneurs, the opportunity is clear: identify an industry with complex, repetitive processes and build AI solutions that don't just automate tasks, but enhance human capabilities in ways that create measurable business value. For investors, the lesson is equally straightforward: depth beats breadth in the AI economy.\n\nThe next wave of billion-dollar AI companies won't be built by creating better chatbots. They'll be built by solving specific, valuable problems for specific industries better than anyone else—and that's exactly what's happening right now.","size_bytes":9026},"client/env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n\ninterface ImportMetaEnv {\n  readonly VITE_GA_MEASUREMENT_ID: string;\n}\n\ninterface ImportMeta {\n  readonly env: ImportMetaEnv;\n}","size_bytes":166},"server/email.ts":{"content":"import { Resend } from 'resend';\n\nconst resend = new Resend(process.env.RESEND_API_KEY);\n\nexport interface ContactNotificationData {\n  name: string;\n  email: string;\n  message: string;\n  submittedAt: string;\n}\n\nexport async function sendContactNotification(data: ContactNotificationData, fromDomain: string) {\n  try {\n    const { data: emailData, error } = await resend.emails.send({\n      from: `Portfolio Contact <jamieson@qstore24.com>`,\n      to: ['peter@jamieson.digital'],\n      subject: `New Contact Form Submission from ${data.name}`,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;\">\n          <h2 style=\"color: #333; border-bottom: 2px solid #007AFF; padding-bottom: 10px;\">\n            New Contact Form Submission\n          </h2>\n          \n          <div style=\"background-color: #f9f9f9; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n            <h3 style=\"color: #007AFF; margin-top: 0;\">Contact Details</h3>\n            <p><strong>Name:</strong> ${data.name}</p>\n            <p><strong>Email:</strong> <a href=\"mailto:${data.email}\">${data.email}</a></p>\n            <p><strong>Submitted:</strong> ${new Date(data.submittedAt).toLocaleString()}</p>\n          </div>\n          \n          <div style=\"background-color: #fff; padding: 20px; border-left: 4px solid #007AFF; margin: 20px 0;\">\n            <h3 style=\"color: #333; margin-top: 0;\">Message</h3>\n            <p style=\"line-height: 1.6; white-space: pre-wrap;\">${data.message}</p>\n          </div>\n          \n          <div style=\"margin-top: 30px; padding: 15px; background-color: #f0f0f0; border-radius: 8px; font-size: 12px; color: #666;\">\n            <p style=\"margin: 0;\">This email was sent from your portfolio contact form at ${new Date().toLocaleString()}.</p>\n          </div>\n        </div>\n      `,\n    });\n\n    if (error) {\n      console.error('Email sending error:', error);\n      throw new Error(`Failed to send email: ${error.message}`);\n    }\n\n    console.log('Email sent successfully:', emailData?.id);\n    return emailData;\n  } catch (error) {\n    console.error('Email service error:', error);\n    throw error;\n  }\n}\n\nexport async function sendContactConfirmation(data: ContactNotificationData, fromDomain: string) {\n  try {\n    const { data: emailData, error } = await resend.emails.send({\n      from: `Peter Jamieson <jamieson@qstore24.com>`,\n      to: [data.email],\n      subject: 'Thank you for reaching out - Peter Jamieson',\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;\">\n          <h2 style=\"color: #333; border-bottom: 2px solid #007AFF; padding-bottom: 10px;\">\n            Thank you for your message, ${data.name}!\n          </h2>\n          \n          <p style=\"font-size: 16px; line-height: 1.6; color: #333;\">\n            I've received your message and will get back to you within 24-48 hours. I appreciate you taking the time to reach out.\n          </p>\n          \n          <div style=\"background-color: #f9f9f9; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n            <h3 style=\"color: #007AFF; margin-top: 0;\">Your Message (for reference)</h3>\n            <p style=\"line-height: 1.6; white-space: pre-wrap; color: #666;\">${data.message}</p>\n          </div>\n          \n          <p style=\"color: #333; line-height: 1.6;\">\n            Best regards,<br>\n            <strong>Peter Jamieson</strong><br>\n            Chief Information Officer | Digital Transformation Leader\n          </p>\n          \n          <div style=\"margin-top: 30px; padding: 15px; background-color: #f0f0f0; border-radius: 8px;\">\n            <p style=\"margin: 0; font-size: 12px; color: #666;\">\n              Connect with me: \n              <a href=\"https://linkedin.com/in/pjamieson\" style=\"color: #007AFF;\">LinkedIn</a> | \n              <a href=\"https://twitter.com/digitaljamieson\" style=\"color: #007AFF;\">Twitter</a>\n            </p>\n          </div>\n        </div>\n      `,\n    });\n\n    if (error) {\n      console.error('Confirmation email error:', error);\n      // Don't throw error for confirmation emails - we still want the main notification to succeed\n      return null;\n    }\n\n    console.log('Confirmation email sent successfully:', emailData?.id);\n    return emailData;\n  } catch (error) {\n    console.error('Confirmation email service error:', error);\n    // Don't throw error for confirmation emails\n    return null;\n  }\n}","size_bytes":4465},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport path from \"path\";\nimport fs from \"fs\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  // Custom error handling middleware\n  app.use((err: any, req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n    \n    // Determine if this is an API request or a page request\n    const isApiRequest = req.path.startsWith('/api');\n    const acceptsJson = req.get('Accept')?.includes('application/json');\n    \n    // For API requests or AJAX calls, return JSON\n    if (isApiRequest || acceptsJson) {\n      res.status(status).json({ message });\n      return;\n    }\n    \n    // For page requests, serve HTML error pages\n    const errorPagePath = path.resolve(\n      import.meta.dirname,\n      'error-pages',\n      `${status}.html`\n    );\n    \n    // Check if we have a custom error page for this status code\n    if (fs.existsSync(errorPagePath)) {\n      const errorHtml = fs.readFileSync(errorPagePath, 'utf-8');\n      res.status(status).set({ 'Content-Type': 'text/html' }).send(errorHtml);\n    } else {\n      // Fallback to generic 500 error page\n      const fallbackPath = path.resolve(\n        import.meta.dirname,\n        'error-pages',\n        '500.html'\n      );\n      \n      if (fs.existsSync(fallbackPath)) {\n        const errorHtml = fs.readFileSync(fallbackPath, 'utf-8');\n        res.status(status).set({ 'Content-Type': 'text/html' }).send(errorHtml);\n      } else {\n        // Ultimate fallback\n        res.status(status).send(`<h1>Error ${status}</h1><p>${message}</p>`);\n      }\n    }\n    \n    // Log the error but don't throw (prevents crash)\n    console.error(`Server error ${status}:`, err);\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":3488},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertProfileSchema, insertContactSchema } from \"@shared/schema\";\nimport { sendContactNotification, sendContactConfirmation } from \"./email\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Get profile data\n  app.get(\"/api/profile\", async (req, res) => {\n    try {\n      const profile = await storage.getProfile();\n      if (!profile) {\n        return res.status(404).json({ message: \"Profile not found\" });\n      }\n      res.json(profile);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch profile\" });\n    }\n  });\n\n  // Update profile data\n  app.put(\"/api/profile\", async (req, res) => {\n    try {\n      const validatedData = insertProfileSchema.parse(req.body);\n      const profile = await storage.updateProfile(validatedData);\n      res.json(profile);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid profile data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to update profile\" });\n    }\n  });\n\n  // Submit contact form\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      const validatedData = insertContactSchema.parse(req.body);\n      const contact = await storage.createContactSubmission(validatedData);\n      \n      // Send email notifications\n      const emailDomain = process.env.EMAIL_FROM_DOMAIN || 'jamieson.digital';\n      const emailData = {\n        name: validatedData.name,\n        email: validatedData.email,\n        message: validatedData.message,\n        submittedAt: contact.createdAt\n      };\n      \n      try {\n        // Send notification to Peter\n        await sendContactNotification(emailData, emailDomain);\n        \n        // Send confirmation to submitter (non-blocking)\n        sendContactConfirmation(emailData, emailDomain).catch(error => {\n          console.error('Failed to send confirmation email:', error);\n        });\n      } catch (emailError) {\n        console.error('Failed to send notification email:', emailError);\n        // Don't fail the entire request if email fails\n      }\n      \n      res.json({ message: \"Message sent successfully\", contact });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid contact data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to send message\" });\n    }\n  });\n\n  // Get contact submissions (for future admin panel)\n  app.get(\"/api/contact\", async (req, res) => {\n    try {\n      const submissions = await storage.getContactSubmissions();\n      res.json(submissions);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch contact submissions\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":2962},"server/storage.ts":{"content":"import { type User, type InsertUser, type Profile, type InsertProfile, type ContactSubmission, type InsertContact } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  getProfile(): Promise<Profile | undefined>;\n  updateProfile(profile: InsertProfile): Promise<Profile>;\n  \n  createContactSubmission(contact: InsertContact): Promise<ContactSubmission>;\n  getContactSubmissions(): Promise<ContactSubmission[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private profile: Profile | undefined;\n  private contactSubmissions: Map<string, ContactSubmission>;\n\n  constructor() {\n    this.users = new Map();\n    this.contactSubmissions = new Map();\n    \n    // Initialize with default profile data\n    this.profile = {\n      id: randomUUID(),\n      name: \"Peter Jamieson\",\n      tagline: \"Technologist | Digital Transformation Leader | AI Advocate\",\n      bio: \"I'm a technology leader with over 15 years of experience building resilient digital foundations that fuel business transformation and sustainable growth. With a proven track record across retail, real estate, government, and construction sectors, I specialize in guiding high-performing teams through complex modernization journeys—transforming legacy systems into agile, cloud-native platforms that drive operational excellence.\\n\\nMy leadership philosophy centers on transparency, collaboration, and staying connected to the frontlines of technology. I maintain a hands-on approach to coding and development—not just as a technical skill, but as a leadership tool that keeps me attuned to emerging possibilities and the challenges my teams face daily. This direct engagement enables me to translate complex technical concepts into clear business outcomes while building authentic relationships across all levels of the organization.\\n\\nI'm passionate about democratizing AI knowledge, actively sharing insights on enterprise AI adoption and helping leadership teams understand its strategic potential beyond the technical complexity. My focus is on making AI accessible and actionable—developing governance frameworks and fostering the cultural shifts needed for organizations to harness AI's power responsibly and effectively.\\n\\nThroughout my career, from building new cities powered by AI at NEOM to leading digital transformation across luxury retail at Seddiqi Holding, I've consistently delivered results by putting people and purpose at the center of every technology decision. My mission is to create environments where innovation thrives, teams are empowered to solve complex problems, and every digital investment creates lasting value for customers and stakeholders.\\n\\nThis commitment to purposeful technology leadership has been recognized through CIO50 Middle East (IDC, 2021) and my Fellowship of BCS (2022). These achievements fuel my mission to create environments where innovation thrives, teams are empowered to solve complex problems, and every digital investment creates lasting value for customers and stakeholders.\",\n      humanistExpertise: \"Technology Leadership: Digital Strategy | Enterprise Architecture | IT Governance | Budget Oversight | Change Management. Experienced in leading lean, high-performing teams through complex change initiatives while maintaining focus on transparency, collaboration, and agility across diverse organizational cultures.\",\n      visionaryExpertise: \"Transformation Execution: Cloud (Azure, OCI) | Oracle & SAP | AI/ML | CRM & ERP | CI/CD | Agile Delivery | Smart Infrastructure. Proven success in transforming legacy applications into modern, scalable platforms spanning ERP, CRM, HR, and data ecosystems with embedded governance and service excellence.\",\n      galvanizerExpertise: \"Business Impact: Cost Optimization | Digital Innovation | Stakeholder Engagement | Vendor Negotiation | Global Team Leadership. Known for working closely with boards and C-suite stakeholders to enable innovation and growth, delivering over $15M in cost optimizations and managing multi-million dollar technology portfolios.\",\n      currentRole: \"Senior Director Group Technology at Seddiqi Holding - Developed and executed the 'Unity' enterprise tech strategy across luxury retail, real estate, and investment divisions. Managing a technology portfolio spanning 60+ stores and four group companies. Deployed Salesforce Service Cloud, Marketing Cloud, and Commerce Cloud to support the launch of a new global sports brand. Directed transformation programs including SAP S/4HANA and Oracle cloud implementations. Launched AI-driven customer analytics and demand forecasting pilots. Built new enterprise architecture, GRC, and cybersecurity functions, including 24/7 SOC deployment. Delivered a group-wide service desk and managed support model to enable global scalability.\",\n      microsoftRole: \"Public Sector Chief Technology Officer at Microsoft Scotland - Led Microsoft's engagement with Scottish public sector clients, including health, local government, and education. Developed digital transformation strategies leveraging Azure, Power Platform, and Microsoft 365 ecosystems. Supported adoption of cloud operating models and citizen-centric digital services across multiple agencies. Delivered executive roundtables, strategy offsites, and board briefings on cloud risk, security, and governance. Partnered with global teams to pilot AI, cognitive services, and digital identity programs for government use. Helped shape national strategies for data interoperability, open data standards, and accessibility frameworks.\",\n      ibmRole: \"Chief Architect at IBM UK - Served as architecture lead for major UK public sector and financial services clients. Directed technology strategy and architecture governance across transformation programs valued at £100M+. Delivered secure hybrid cloud architectures and enterprise integration frameworks across legacy and modern platforms. Led multi-disciplinary teams across EMEA in application modernization, DevOps, and data platform delivery. Drove IBM's innovation agenda in blockchain, AI, and API-based digital ecosystems within regulated environments. Co-authored architecture playbooks adopted as EMEA best practice for IBM's services division.\",\n      previousRole1: \"Director of Information Technology at NEOM - Directed digital infrastructure and IT operations for NEOM, the $500B smart city flagship of Vision 2030. Delivered smart infrastructure foundations including cloud-native ERP, WAN, and data center architecture. Managed $15M+ tech budget, overseeing multi-cloud strategy, vendor engagement, and SLA governance. Acted as cross-sector advisor integrating digital twins and IoT within core construction and city planning streams.\",\n      previousRole2: \"Chief Technology Officer at Department of Culture & Tourism (DCT) Abu Dhabi - Spearheaded digital government strategy implementation for 2,000+ employees. Delivered Abu Dhabi's first full Azure and M365 migration, with integrated E5 telephony. Implemented SAP SuccessFactors and Microsoft Dynamics 365 across HR and CRM functions. Led digital product innovation for visitor engagement, data analytics, and smart tourism. Introduced CI/CD pipelines, agile squads, and experience-led design across all initiatives.\",\n      email: \"peter@apj.me\",\n      linkedin: \"linkedin.com/in/pjamieson\",\n      location: \"Dubai, UAE • Available for Global Collaboration\"\n    };\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async getProfile(): Promise<Profile | undefined> {\n    return this.profile;\n  }\n\n  async updateProfile(profileData: InsertProfile): Promise<Profile> {\n    if (!this.profile) {\n      const id = randomUUID();\n      this.profile = { ...profileData, id };\n    } else {\n      this.profile = { ...this.profile, ...profileData };\n    }\n    return this.profile;\n  }\n\n  async createContactSubmission(contactData: InsertContact): Promise<ContactSubmission> {\n    const id = randomUUID();\n    const createdAt = new Date().toISOString();\n    const contact: ContactSubmission = { ...contactData, id, createdAt };\n    this.contactSubmissions.set(id, contact);\n    return contact;\n  }\n\n  async getContactSubmissions(): Promise<ContactSubmission[]> {\n    return Array.from(this.contactSubmissions.values());\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":8942},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const profiles = pgTable(\"profiles\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  tagline: text(\"tagline\").notNull(),\n  bio: text(\"bio\").notNull(),\n  humanistExpertise: text(\"humanist_expertise\").notNull(),\n  visionaryExpertise: text(\"visionary_expertise\").notNull(),\n  galvanizerExpertise: text(\"galvanizer_expertise\").notNull(),\n  currentRole: text(\"current_role\").notNull(),\n  previousRole1: text(\"previous_role_1\").notNull(),\n  previousRole2: text(\"previous_role_2\").notNull(),\n  microsoftRole: text(\"microsoft_role\").notNull(),\n  ibmRole: text(\"ibm_role\").notNull(),\n  email: text(\"email\").notNull(),\n  linkedin: text(\"linkedin\").notNull(),\n  location: text(\"location\").notNull(),\n});\n\nexport const contactSubmissions = pgTable(\"contact_submissions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  message: text(\"message\").notNull(),\n  createdAt: text(\"created_at\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertProfileSchema = createInsertSchema(profiles).omit({\n  id: true,\n});\n\nexport const insertContactSchema = createInsertSchema(contactSubmissions).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type Profile = typeof profiles.$inferSelect;\nexport type InsertProfile = z.infer<typeof insertProfileSchema>;\nexport type ContactSubmission = typeof contactSubmissions.$inferSelect;\nexport type InsertContact = z.infer<typeof insertContactSchema>;\n","size_bytes":2083},"client/hooks/use-analytics.tsx":{"content":"import { useEffect, useRef } from 'react';\nimport { useLocation } from 'wouter';\nimport { trackPageView } from '../lib/analytics';\n\nexport const useAnalytics = () => {\n  const [location] = useLocation();\n  const prevLocationRef = useRef<string>(location);\n  \n  useEffect(() => {\n    if (location !== prevLocationRef.current) {\n      trackPageView(location);\n      prevLocationRef.current = location;\n    }\n  }, [location]);\n};","size_bytes":426},"client/lib/analytics.ts":{"content":"// Define the gtag function globally\ndeclare global {\n  interface Window {\n    dataLayer: any[];\n    gtag: (...args: any[]) => void;\n  }\n}\n\n// Initialize Google Analytics\nexport const initGA = () => {\n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n\n  if (!measurementId) {\n    console.warn('Missing required Google Analytics key: VITE_GA_MEASUREMENT_ID');\n    return;\n  }\n\n  // Add Google Analytics script to the head\n  const script1 = document.createElement('script');\n  script1.async = true;\n  script1.src = `https://www.googletagmanager.com/gtag/js?id=${measurementId}`;\n  document.head.appendChild(script1);\n\n  // Initialize gtag\n  const script2 = document.createElement('script');\n  script2.textContent = `\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n    gtag('config', '${measurementId}');\n  `;\n  document.head.appendChild(script2);\n};\n\n// Track page views - useful for single-page applications\nexport const trackPageView = (url: string) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n  if (!measurementId) return;\n  \n  window.gtag('config', measurementId, {\n    page_path: url\n  });\n};\n\n// Track events\nexport const trackEvent = (\n  action: string, \n  category?: string, \n  label?: string, \n  value?: number\n) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  window.gtag('event', action, {\n    event_category: category,\n    event_label: label,\n    value: value,\n  });\n};","size_bytes":1581},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useEffect } from \"react\";\nimport { initGA } from \"../lib/analytics\";\nimport { useAnalytics } from \"../hooks/use-analytics\";\nimport { ErrorBoundary } from \"@/components/error-boundary\";\nimport Home from \"@/pages/home\";\nimport Article from \"@/pages/article\";\nimport NotFound from \"@/pages/not-found\";\nimport ServerError from \"@/pages/server-error\";\n\nfunction Router() {\n  // Track page views when routes change\n  useAnalytics();\n  \n  return (\n    <ErrorBoundary>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/article/:slug\" component={Article} />\n        <Route path=\"/error/:status?\" component={({ params }) => {\n          const status = params?.status ? parseInt(params.status) : 500;\n          return <ServerError status={status} />;\n        }} />\n        <Route component={NotFound} />\n      </Switch>\n    </ErrorBoundary>\n  );\n}\n\nfunction App() {\n  // Initialize Google Analytics when app loads\n  useEffect(() => {\n    // Verify required environment variable is present\n    if (!import.meta.env.VITE_GA_MEASUREMENT_ID) {\n      console.warn('Missing required Google Analytics key: VITE_GA_MEASUREMENT_ID');\n    } else {\n      initGA();\n    }\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <HelmetProvider>\n        <QueryClientProvider client={queryClient}>\n          <TooltipProvider>\n            <Toaster />\n            <Router />\n          </TooltipProvider>\n        </QueryClientProvider>\n      </HelmetProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","size_bytes":1825},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(29, 8%, 11%);\n  --muted: hsl(60, 4.8%, 95.9%);\n  --muted-foreground: hsl(25, 5.3%, 44.7%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(29, 8%, 11%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(29, 8%, 11%);\n  --border: hsl(20, 5.9%, 90%);\n  --input: hsl(20, 5.9%, 90%);\n  --primary: hsl(221, 100%, 50%);\n  --primary-foreground: hsl(211, 100%, 99%);\n  --secondary: hsl(60, 4.8%, 95.9%);\n  --secondary-foreground: hsl(24, 9.8%, 10%);\n  --accent: hsl(60, 4.8%, 95.9%);\n  --accent-foreground: hsl(24, 9.8%, 10%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(60, 9.1%, 97.8%);\n  --ring: hsl(29, 8%, 11%);\n  --radius: 0.5rem;\n  \n  /* Apple-style custom colors */\n  --apple-gray: hsl(0, 0%, 53%);\n  --apple-text: hsl(0, 0%, 11%);\n  --apple-blue: hsl(221, 100%, 50%);\n  --apple-bg: hsl(0, 0%, 98%);\n}\n\n.dark {\n  --background: hsl(240, 10%, 3.9%);\n  --foreground: hsl(0, 0%, 98%);\n  --muted: hsl(240, 3.7%, 15.9%);\n  --muted-foreground: hsl(240, 5%, 64.9%);\n  --popover: hsl(240, 10%, 3.9%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 10%, 3.9%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 3.7%, 15.9%);\n  --input: hsl(240, 3.7%, 15.9%);\n  --primary: hsl(221, 100%, 50%);\n  --primary-foreground: hsl(211, 100%, 99%);\n  --secondary: hsl(240, 3.7%, 15.9%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --accent: hsl(240, 3.7%, 15.9%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --ring: hsl(240, 4.9%, 83.9%);\n  --radius: 0.5rem;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n  \n  /* Accessibility improvements */\n  .sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border: 0;\n  }\n  \n  .focus\\\\:not-sr-only:focus {\n    position: static;\n    width: auto;\n    height: auto;\n    padding: inherit;\n    margin: inherit;\n    overflow: visible;\n    clip: auto;\n    white-space: normal;\n  }\n}\n\n@layer utilities {\n  .backdrop-blur-safari {\n    backdrop-filter: blur(20px);\n    -webkit-backdrop-filter: blur(20px);\n  }\n  \n  .tracking-apple {\n    letter-spacing: -0.022em;\n  }\n  \n  .text-apple-gray {\n    color: var(--apple-gray);\n  }\n  \n  .text-apple-text {\n    color: var(--apple-text);\n  }\n  \n  .text-apple-blue {\n    color: var(--apple-blue);\n  }\n  \n  .bg-apple-bg {\n    background-color: var(--apple-bg);\n  }\n  \n  .bg-apple-blue {\n    background-color: var(--apple-blue);\n  }\n  \n  .border-apple-blue {\n    border-color: var(--apple-blue);\n  }\n  \n  .hero-bg-mobile {\n    background-position: 60% center;\n  }\n  \n  @media (min-width: 768px) {\n    .hero-bg-mobile {\n      background-position: center 40%;\n    }\n  }\n  \n  .section-fade {\n    /* Show immediately on mobile, fade on desktop */\n    opacity: 1;\n    transform: translateY(0);\n    transition: all 0.8s ease;\n  }\n  \n  /* Only apply fade effect on larger screens */\n  @media (min-width: 768px) {\n    .section-fade {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    \n    .section-fade.visible {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n}\n","size_bytes":3452},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/about-section.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport type { Profile } from \"@shared/schema\";\nimport profileImage from \"@assets/Alison&Pete111edit_1754207312658.jpg\";\n\nexport default function AboutSection() {\n  const { data: profile } = useQuery<Profile>({\n    queryKey: [\"/api/profile\"],\n  });\n\n  const formatBio = (bio: string) => {\n    return bio.split('\\n\\n').map((paragraph, index) => (\n      <p key={index} className=\"mb-6 last:mb-0\">\n        {paragraph}\n      </p>\n    ));\n  };\n\n  return (\n    <section id=\"about\" className=\"py-20 px-6 lg:px-8 section-fade\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-4xl md:text-5xl font-bold text-apple-text tracking-tight mb-4\">About</h2>\n          <div className=\"w-20 h-1 bg-gradient-to-r from-apple-blue to-blue-600 mx-auto rounded-full\"></div>\n        </div>\n        \n        {/* Responsive Layout */}\n        <div className=\"grid lg:grid-cols-3 gap-8 lg:gap-12 items-start\">\n          {/* Profile Image */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"relative group\">\n              <img \n                src={profileImage} \n                alt=\"Peter Jamieson - Professional Headshot\" \n                className=\"w-64 md:w-72 lg:w-full mx-auto rounded-2xl shadow-2xl transition-all duration-300 group-hover:shadow-3xl\"\n              />\n              {/* Subtle gradient overlay on hover */}\n              <div className=\"absolute inset-0 rounded-2xl bg-gradient-to-br from-apple-blue/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n            </div>\n          </div>\n          \n          {/* Bio Content */}\n          <div className=\"lg:col-span-2 text-apple-text leading-relaxed text-lg space-y-6\">\n            {profile?.bio ? (\n              <div className=\"space-y-6\">\n                {formatBio(profile.bio)}\n              </div>\n            ) : (\n              <>\n                <p className=\"first-letter:text-4xl md:first-letter:text-6xl first-letter:font-bold first-letter:text-apple-blue first-letter:float-left first-letter:mr-3 first-letter:mt-1 first-letter:leading-none\">\n                  I'm a technology leader with over 15 years of experience building resilient digital foundations that fuel business transformation and sustainable growth. With a proven track record across retail, real estate, government, and construction sectors, I specialize in guiding high-performing teams through complex modernization journeys—transforming legacy systems into agile, cloud-native platforms that drive operational excellence.\n                </p>\n                <p>\n                  My leadership philosophy centers on transparency, collaboration, and staying connected to the frontlines of technology. I maintain a hands-on approach to coding and development—not just as a technical skill, but as a leadership tool that keeps me attuned to emerging possibilities and the challenges my teams face daily. This direct engagement enables me to translate complex technical concepts into clear business outcomes while building authentic relationships across all levels of the organization.\n                </p>\n                <p>\n                  I'm passionate about democratizing AI knowledge, actively sharing insights on enterprise AI adoption and helping leadership teams understand its strategic potential beyond the technical complexity. My focus is on making AI accessible and actionable—developing governance frameworks and fostering the cultural shifts needed for organizations to harness AI's power responsibly and effectively.\n                </p>\n                <p>\n                  Throughout my career, from building new cities powered by AI at NEOM to leading digital transformation across luxury retail at Seddiqi Holding, I've consistently delivered results by putting people and purpose at the center of every technology decision. My mission is to create environments where innovation thrives, teams are empowered to solve complex problems, and every digital investment creates lasting value for customers and stakeholders.\n                </p>\n                <p>\n                  This commitment to purposeful technology leadership has been recognized through CIO50 Middle East (IDC, 2021) and my Fellowship of BCS (2022). These achievements fuel my mission to create environments where innovation thrives, teams are empowered to solve complex problems, and every digital investment creates lasting value for customers and stakeholders.\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n          \n          {/* Professional Highlights */}\n          <div className=\"mt-12 pt-8 border-t border-gray-200\">\n            <div className=\"grid md:grid-cols-3 gap-8\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-apple-blue mb-2\">CIO50</div>\n                <p className=\"text-apple-gray text-sm\">Middle East Recognition (IDC, 2021)</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-apple-blue mb-2\">$15M+</div>\n                <p className=\"text-apple-gray text-sm\">Technology Budget Management</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-apple-blue mb-2\">Fellow BCS</div>\n                <p className=\"text-apple-gray text-sm\">Distinguished IT Contribution (2022)</p>\n              </div>\n            </div>\n          </div>\n        </div>\n    </section>\n  );\n}","size_bytes":5634},"client/src/components/articles-section.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowRight } from \"lucide-react\";\nimport seoIcon from \"@assets/generated_images/AI_search_transformation_3df5ca17.png\";\nimport transformationIcon from \"@assets/generated_images/Corporate_AI_strategy_e4b084f5.png\";\nimport aiIcon from \"@assets/generated_images/Vertical_AI_industries_ea3b30fd.png\";\n\nexport default function ArticlesSection() {\n  const articles = [\n    {\n      title: \"The End of Googling: How AI Search is Redefining Business Discovery\",\n      description: \"Exploring how ChatGPT, Perplexity, and other AI search engines are transforming business discovery and what companies need to do to stay visible in the age of conversational search.\",\n      icon: seoIcon,\n      slug: \"seo-strategy-modern-businesses\",\n      readTime: \"12 min read\",\n      category: \"Digital Marketing\"\n    },\n    {\n      title: \"The Corporate AI Mandate: When \\\"Optional\\\" Becomes \\\"Essential\\\"\",\n      description: \"Examining how companies like Duolingo are mandating AI use, the employee backlash, and what this means for the future of work and corporate strategy.\",\n      icon: transformationIcon,\n      slug: \"digital-transformation-roadmap\",\n      readTime: \"10 min read\",\n      category: \"Strategy\"\n    },\n    {\n      title: \"Beyond Chatbots: How Vertical AI is Creating Billion-Dollar Companies\",\n      description: \"Why specialized AI companies like Harvey AI and PathAI are achieving higher valuations than horizontal platforms, and what this means for the future of AI business models.\",\n      icon: aiIcon,\n      slug: \"ai-integration-enterprise\",\n      readTime: \"11 min read\",\n      category: \"Technology\"\n    }\n  ];\n\n  return (\n    <section id=\"articles\" className=\"py-20 px-6 lg:px-8 bg-gradient-to-b from-white to-gray-50 section-fade\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-bold text-apple-text tracking-tight mb-4\">Articles &amp; Publications</h2>\n          <p className=\"text-xl text-apple-gray max-w-2xl mx-auto leading-relaxed\">\n            Insights and thought leadership on technology, digital transformation, and business strategy\n          </p>\n        </div>\n        \n        <div className=\"grid md:grid-cols-3 gap-8 lg:gap-12\">\n          {articles.map((article, index) => (\n            <div key={index} className=\"group relative\">\n              <div className=\"bg-white rounded-3xl shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-3 p-8 h-full flex flex-col border border-gray-100/50\">\n                {/* Header */}\n                <div className=\"text-center mb-8\">\n                  <div className=\"w-20 h-20 rounded-3xl flex items-center justify-center mx-auto mb-6 shadow-md group-hover:scale-105 transition-transform duration-300 bg-gradient-to-br from-gray-50 to-white border border-gray-100\">\n                    <img src={article.icon} alt={`${article.title} icon`} className=\"w-16 h-16 object-cover rounded-2xl\" />\n                  </div>\n                  <div className=\"mb-6\">\n                    <span className=\"inline-block px-4 py-1.5 bg-gradient-to-r from-apple-blue/10 to-blue-500/10 text-apple-blue rounded-full text-sm font-semibold mb-3 border border-apple-blue/20\">\n                      {article.category}\n                    </span>\n                    <div className=\"text-sm text-apple-gray font-medium\">{article.readTime}</div>\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-apple-text mb-4 tracking-tight leading-tight\">{article.title}</h3>\n                  <p className=\"text-apple-gray text-base leading-relaxed font-medium line-height-loose\">{article.description}</p>\n                </div>\n                \n                {/* Footer */}\n                <div className=\"mt-auto pt-6 border-t border-gray-100\">\n                  <Link href={`/article/${article.slug}`} className=\"inline-flex items-center justify-center w-full text-apple-blue font-semibold hover:text-blue-700 transition-colors duration-200 group/link\">\n                    <span>Read Article</span>\n                    <ArrowRight className=\"w-4 h-4 ml-2 group-hover/link:translate-x-1 transition-transform duration-200\" />\n                  </Link>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":4404},"client/src/components/contact-section.tsx":{"content":"import { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { insertContactSchema } from \"@shared/schema\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Linkedin, Twitter, Instagram } from \"lucide-react\";\nimport type { Profile, InsertContact } from \"@shared/schema\";\n\nexport default function ContactSection() {\n  const { toast } = useToast();\n  \n  const { data: profile } = useQuery<Profile>({\n    queryKey: [\"/api/profile\"],\n  });\n\n  const form = useForm<InsertContact>({\n    resolver: zodResolver(insertContactSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n    },\n  });\n\n  const contactMutation = useMutation({\n    mutationFn: async (data: InsertContact) => {\n      const response = await apiRequest(\"POST\", \"/api/contact\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Message sent successfully!\",\n        description: \"Thank you for reaching out. I'll get back to you soon.\",\n      });\n      form.reset();\n      queryClient.invalidateQueries({ queryKey: [\"/api/contact\"] });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Failed to send message\",\n        description: error.message || \"Please try again later.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: InsertContact) => {\n    contactMutation.mutate(data);\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-20 px-6 lg:px-8 bg-gradient-to-b from-gray-50 to-gray-100 section-fade\" aria-labelledby=\"contact-heading\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"text-center mb-16\">\n          <h2 id=\"contact-heading\" className=\"text-4xl md:text-5xl font-bold text-apple-text tracking-tight mb-4\">Get in Touch</h2>\n          <div className=\"w-20 h-1 bg-gradient-to-r from-apple-blue to-blue-600 mx-auto mb-6 rounded-full\"></div>\n        </div>\n        \n        <div className=\"grid lg:grid-cols-2 gap-16 mb-16\">\n          {/* Contact Information */}\n          <div className=\"space-y-8\">\n            <div>\n              <h3 className=\"text-2xl font-bold text-apple-text mb-8\">Let's Connect</h3>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <a \n                href=\"https://linkedin.com/in/pjamieson\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"flex items-center space-x-4 p-4 rounded-2xl hover:bg-white transition-all duration-200 hover:shadow-md group\"\n              >\n                <div className=\"w-12 h-12 bg-apple-blue rounded-full flex items-center justify-center group-hover:scale-110 transition-transform duration-200\">\n                  <Linkedin className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-apple-text group-hover:text-apple-blue transition-colors duration-200\">LinkedIn</h4>\n                  <p className=\"text-apple-gray\">linkedin.com/in/pjamieson</p>\n                </div>\n              </a>\n              \n              <a \n                href=\"https://twitter.com/digitaljamieson\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"flex items-center space-x-4 p-4 rounded-2xl hover:bg-white transition-all duration-200 hover:shadow-md group\"\n              >\n                <div className=\"w-12 h-12 bg-gray-600 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform duration-200\">\n                  <Twitter className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-apple-text group-hover:text-gray-600 transition-colors duration-200\">X (Twitter)</h4>\n                  <p className=\"text-apple-gray\">@digitaljamieson</p>\n                </div>\n              </a>\n              \n              <a \n                href=\"https://instagram.com/jamieson.digital\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"flex items-center space-x-4 p-4 rounded-2xl hover:bg-white transition-all duration-200 hover:shadow-md group\"\n              >\n                <div className=\"w-12 h-12 bg-gradient-to-br from-purple-600 to-pink-600 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform duration-200\">\n                  <Instagram className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-apple-text group-hover:text-purple-600 transition-colors duration-200\">Instagram</h4>\n                  <p className=\"text-apple-gray\">@jamieson.digital</p>\n                </div>\n              </a>\n            </div>\n            \n            <div className=\"pt-6\">\n              <h4 className=\"font-semibold text-apple-text mb-2\">Location</h4>\n              <p className=\"text-apple-gray\">{profile?.location || \"Dubai, UAE • Available for Global Collaboration\"}</p>\n            </div>\n          </div>\n          \n          {/* Contact Form */}\n          <div className=\"bg-white rounded-3xl shadow-xl p-8 border border-gray-100\">\n            <h3 className=\"text-2xl font-bold text-apple-text mb-6\">Send a Message</h3>\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-medium text-apple-text\">Name</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"Your full name\"\n                          className=\"border-gray-200 focus:ring-apple-blue focus:border-apple-blue\"\n                          aria-describedby=\"name-help\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-medium text-apple-text\">Email</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"email\"\n                          placeholder=\"your.email@domain.com\"\n                          className=\"border-gray-200 focus:ring-apple-blue focus:border-apple-blue\"\n                          aria-describedby=\"email-help\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"message\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-medium text-apple-text\">Message</FormLabel>\n                      <FormControl>\n                        <Textarea\n                          placeholder=\"Tell me about your project or inquiry...\"\n                          className=\"border-gray-200 focus:ring-apple-blue focus:border-apple-blue resize-none\"\n                          rows={5}\n                          aria-describedby=\"message-help\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <Button\n                  type=\"submit\"\n                  className=\"w-full bg-apple-blue hover:bg-apple-blue/90 text-white py-3\"\n                  disabled={contactMutation.isPending}\n                >\n                  {contactMutation.isPending ? \"Sending...\" : \"Send Message\"}\n                </Button>\n              </form>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":8685},"client/src/components/error-boundary.tsx":{"content":"import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { AlertTriangle, Home, RefreshCw, Bug } from 'lucide-react';\nimport { Helmet } from 'react-helmet-async';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n  errorInfo?: ErrorInfo;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.setState({\n      error,\n      errorInfo\n    });\n    \n    // Log error for debugging\n    console.error('Error Boundary caught an error:', error, errorInfo);\n    \n    // Report to error tracking service if available\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'exception', {\n        description: error.toString(),\n        fatal: false\n      });\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      return (\n        <>\n          <Helmet>\n            <title>Application Error | Peter Jamieson</title>\n            <meta name=\"description\" content=\"An unexpected error occurred in the application.\" />\n          </Helmet>\n          \n          <div className=\"min-h-screen w-full flex items-center justify-center bg-gradient-to-br from-red-50 to-red-100 dark:from-red-950 dark:to-red-900\">\n            <Card className=\"w-full max-w-lg mx-4 shadow-xl border-0 bg-white/90 dark:bg-slate-900/90 backdrop-blur-sm\">\n              <CardContent className=\"pt-8 pb-8\">\n                <div className=\"text-center space-y-6\">\n                  {/* Error Icon */}\n                  <div className=\"flex items-center justify-center\">\n                    <div className=\"relative\">\n                      <div className=\"w-16 h-16 rounded-full bg-red-100 dark:bg-red-900/30 flex items-center justify-center\">\n                        <AlertTriangle className=\"h-8 w-8 text-red-500 dark:text-red-400\" />\n                      </div>\n                      <div className=\"absolute -top-1 -right-1 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center\">\n                        <Bug className=\"w-3 h-3 text-white\" />\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Error Message */}\n                  <div className=\"space-y-2\">\n                    <h1 className=\"text-2xl font-bold text-slate-900 dark:text-slate-100\">\n                      Something Went Wrong\n                    </h1>\n                    <p className=\"text-slate-600 dark:text-slate-400 max-w-sm mx-auto\">\n                      An unexpected error occurred. Please try refreshing the page or return home.\n                    </p>\n                    \n                    {/* Error Details (only in development) */}\n                    {process.env.NODE_ENV === 'development' && this.state.error && (\n                      <details className=\"mt-4 text-left\">\n                        <summary className=\"cursor-pointer text-sm text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-300\">\n                          View Error Details\n                        </summary>\n                        <div className=\"mt-2 p-3 bg-slate-100 dark:bg-slate-800 rounded-md text-xs font-mono text-slate-700 dark:text-slate-300 overflow-auto max-h-32\">\n                          <p className=\"font-semibold text-red-600 dark:text-red-400 mb-2\">\n                            {this.state.error.name}: {this.state.error.message}\n                          </p>\n                          {this.state.error.stack && (\n                            <pre className=\"whitespace-pre-wrap text-xs\">\n                              {this.state.error.stack}\n                            </pre>\n                          )}\n                        </div>\n                      </details>\n                    )}\n                  </div>\n                  \n                  {/* Action Buttons */}\n                  <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\n                    <Button \n                      onClick={() => window.location.reload()}\n                      className=\"flex-1\"\n                    >\n                      <RefreshCw className=\"w-4 h-4 mr-2\" />\n                      Refresh Page\n                    </Button>\n                    \n                    <Button \n                      variant=\"outline\"\n                      onClick={() => window.location.href = '/'}\n                      className=\"flex-1\"\n                    >\n                      <Home className=\"w-4 h-4 mr-2\" />\n                      Go Home\n                    </Button>\n                  </div>\n                  \n                  {/* Support Information */}\n                  <div className=\"pt-4 border-t border-slate-200 dark:border-slate-700\">\n                    <p className=\"text-sm text-slate-500 dark:text-slate-400\">\n                      If this problem persists, please{' '}\n                      <a \n                        href=\"/#contact\" \n                        className=\"text-blue-600 dark:text-blue-400 hover:underline\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          window.location.href = '/#contact';\n                        }}\n                      >\n                        contact support\n                      </a>\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// Higher-order component for easier usage\nexport function withErrorBoundary<P extends object>(\n  Component: React.ComponentType<P>,\n  fallback?: ReactNode\n) {\n  return function ErrorBoundaryWrapper(props: P) {\n    return (\n      <ErrorBoundary fallback={fallback}>\n        <Component {...props} />\n      </ErrorBoundary>\n    );\n  };\n}","size_bytes":6281},"client/src/components/experience-section.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport type { Profile } from \"@shared/schema\";\n\nexport default function ExperienceSection() {\n  const { data: profile } = useQuery<Profile>({\n    queryKey: [\"/api/profile\"],\n  });\n\n  const parseRole = (roleText: string) => {\n    const parts = roleText.split(' - ');\n    const titleAndCompany = parts[0];\n    const description = parts[1] || '';\n    \n    // Extract title and company\n    const titleParts = titleAndCompany.split(' at ');\n    const title = titleParts[0];\n    const company = titleParts[1] || '';\n    \n    return { title, company, description };\n  };\n\n  const currentRole = parseRole(profile?.currentRole || \"Senior Director Group Technology at Seddiqi Holding - Developed and executed the 'Unity' enterprise tech strategy across luxury retail, real estate, and investment divisions. Managing a technology portfolio spanning 60+ stores and four group companies.\");\n  const previousRole1 = parseRole(profile?.previousRole1 || \"Director of Information Technology at NEOM - Directed digital infrastructure and IT operations for NEOM, the $500B smart city flagship of Vision 2030. Delivered smart infrastructure foundations including cloud-native ERP, WAN, and data center architecture.\");\n  const previousRole2 = parseRole(profile?.previousRole2 || \"Chief Technology Officer at Department of Culture & Tourism (DCT) Abu Dhabi - Spearheaded digital government strategy implementation for 2,000+ employees. Delivered Abu Dhabi's first full Azure and M365 migration.\");\n  const microsoftRole = parseRole(profile?.microsoftRole || \"Public Sector Chief Technology Officer at Microsoft Scotland - Led Microsoft's engagement with Scottish public sector clients, including health, local government, and education. Developed digital transformation strategies leveraging Azure and Power Platform.\");\n  const ibmRole = parseRole(profile?.ibmRole || \"Chief Architect at IBM UK - Served as architecture lead for major UK public sector and financial services clients. Directed technology strategy and architecture governance across transformation programs valued at £100M+.\");\n\n  return (\n    <section id=\"experience\" className=\"py-20 px-6 lg:px-8 section-fade bg-gradient-to-b from-gray-50 to-white relative\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-4xl md:text-5xl font-bold text-apple-text tracking-tight mb-3\">Experience</h2>\n          <div className=\"w-20 h-1 bg-gradient-to-r from-apple-blue to-purple-600 mx-auto mb-4 rounded-full\"></div>\n          <p className=\"text-xl text-apple-gray max-w-2xl mx-auto leading-relaxed\">\n            15+ years of transformational leadership across diverse industries and global markets\n          </p>\n        </div>\n        \n        <div className=\"space-y-12\">\n          {/* Current Role */}\n          <div className=\"border-l-2 border-apple-blue pl-8 relative\">\n            <div className=\"absolute -left-2 top-0 w-4 h-4 bg-apple-blue rounded-full\"></div>\n            <h3 className=\"text-xl font-semibold text-apple-text mb-2\">{currentRole.title}</h3>\n            <p className=\"text-apple-blue font-medium mb-3\">\n              {currentRole.company}\n            </p>\n            <p className=\"text-apple-gray leading-relaxed\">\n              {currentRole.description}\n            </p>\n          </div>\n          \n          {/* Previous Role 1 */}\n          <div className=\"border-l-2 border-gray-200 pl-8 relative\">\n            <div className=\"absolute -left-2 top-0 w-4 h-4 bg-gray-300 rounded-full\"></div>\n            <h3 className=\"text-xl font-semibold text-apple-text mb-2\">{previousRole1.title}</h3>\n            <p className=\"text-apple-gray font-medium mb-3\">\n              {previousRole1.company}\n            </p>\n            <p className=\"text-apple-gray leading-relaxed\">\n              {previousRole1.description}\n            </p>\n          </div>\n          \n          {/* Previous Role 2 */}\n          <div className=\"border-l-2 border-gray-200 pl-8 relative\">\n            <div className=\"absolute -left-2 top-0 w-4 h-4 bg-gray-300 rounded-full\"></div>\n            <h3 className=\"text-xl font-semibold text-apple-text mb-2\">{previousRole2.title}</h3>\n            <p className=\"text-apple-gray font-medium mb-3\">\n              {previousRole2.company}\n            </p>\n            <p className=\"text-apple-gray leading-relaxed\">\n              {previousRole2.description}\n            </p>\n          </div>\n          \n          {/* Microsoft Role */}\n          <div className=\"border-l-2 border-gray-200 pl-8 relative\">\n            <div className=\"absolute -left-2 top-0 w-4 h-4 bg-gray-300 rounded-full\"></div>\n            <h3 className=\"text-xl font-semibold text-apple-text mb-2\">{microsoftRole.title}</h3>\n            <p className=\"text-apple-gray font-medium mb-3\">\n              {microsoftRole.company}\n            </p>\n            <p className=\"text-apple-gray leading-relaxed\">\n              {microsoftRole.description}\n            </p>\n          </div>\n          \n          {/* IBM Role */}\n          <div className=\"border-l-2 border-gray-200 pl-8 relative\">\n            <div className=\"absolute -left-2 top-0 w-4 h-4 bg-gray-300 rounded-full\"></div>\n            <h3 className=\"text-xl font-semibold text-apple-text mb-2\">{ibmRole.title}</h3>\n            <p className=\"text-apple-gray font-medium mb-3\">\n              {ibmRole.company}\n            </p>\n            <p className=\"text-apple-gray leading-relaxed\">\n              {ibmRole.description}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5614},"client/src/components/expertise-section.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport type { Profile } from \"@shared/schema\";\nimport businessIcon from \"@assets/generated_images/Business_impact_trending_chart_icon_de5fc6d1.png\";\nimport transformationIcon from \"@assets/generated_images/Digital_transformation_cloud_icon_3f4c1dc5.png\";\nimport leadershipIcon from \"@assets/generated_images/Technology_leadership_network_icon_7f4adcd2.png\";\n\nexport default function ExpertiseSection() {\n  const { data: profile } = useQuery<Profile>({\n    queryKey: [\"/api/profile\"],\n  });\n\n  const expertiseAreas = [\n    {\n      title: \"Business Impact\",\n      subtitle: \"Driving measurable value through strategic technology investments\",\n      icon: businessIcon,\n      bullets: [\n        \"Cost optimization and vendor negotiation expertise\",\n        \"C-suite stakeholder engagement and board-level strategy\",\n        \"Digital innovation that creates competitive advantage\",\n        \"Global team leadership across diverse sectors\"\n      ]\n    },\n    {\n      title: \"Transformation Execution\", \n      subtitle: \"Leading complex modernization journeys from legacy to cloud-native\",\n      icon: transformationIcon,\n      bullets: [\n        \"Enterprise application modernization (ERP, CRM, HR systems)\",\n        \"Cloud strategy and multi-platform integration\",\n        \"Agile delivery and CI/CD implementation\",\n        \"Large-scale infrastructure transformations\"\n      ]\n    },\n    {\n      title: \"Technology Leadership\",\n      subtitle: \"Building high-performing teams through transparency and collaboration\",\n      icon: leadershipIcon,\n      bullets: [\n        \"Enterprise architecture and IT governance\",\n        \"Digital strategy development and execution\",\n        \"Change management across complex initiatives\",\n        \"Emerging technology adoption and AI readiness\"\n      ]\n    }\n  ];\n\n  return (\n    <section id=\"expertise\" className=\"py-20 px-6 lg:px-8 bg-white section-fade relative\">\n      {/* Bottom gradient separator */}\n      <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-apple-blue via-blue-500 to-purple-600\"></div>\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-bold text-apple-text tracking-tight mb-4\">Core Expertise</h2>\n          <div className=\"w-20 h-1 bg-gradient-to-r from-apple-blue to-blue-600 mx-auto mb-6 rounded-full\"></div>\n          <p className=\"text-xl text-apple-gray max-w-2xl mx-auto leading-relaxed\">\n            Transforming organizations through strategic technology leadership and innovation\n          </p>\n        </div>\n        \n        <div className=\"grid md:grid-cols-3 gap-8 lg:gap-12\">\n          {expertiseAreas.map((area, index) => (\n            <div key={index} className=\"group relative\">\n              <div className=\"bg-white rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 p-8 h-full flex flex-col border border-gray-100\">\n                {/* Header */}\n                <div className=\"text-center mb-8\">\n                  <div className=\"w-16 h-16 rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-lg group-hover:scale-110 transition-transform duration-300 bg-white border-2 border-gray-100\">\n                    <img src={area.icon} alt={`${area.title} icon`} className=\"w-12 h-12 object-contain\" />\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-apple-text mb-4 tracking-tight\">{area.title}</h3>\n                  <p className=\"text-apple-gray font-medium text-[15px]\">{area.subtitle}</p>\n                </div>\n                \n                {/* Content */}\n                <div className=\"flex-grow\">\n                  <ul className=\"space-y-4\">\n                    {area.bullets.map((bullet, bulletIndex) => (\n                      <li key={bulletIndex} className=\"flex items-start group/item\">\n                        <div className=\"w-2 h-2 bg-apple-blue rounded-full mr-4 mt-2.5 flex-shrink-0 group-hover/item:scale-125 transition-transform duration-200\"></div>\n                        <span className=\"text-apple-text text-sm leading-relaxed font-medium\">{bullet}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                \n                {/* Subtle accent */}\n                <div className=\"absolute top-0 left-1/2 transform -translate-x-1/2 w-12 h-1 bg-gradient-to-r from-apple-blue to-blue-600 rounded-b-full\"></div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4628},"client/src/components/footer.tsx":{"content":"import logoImage from \"@assets/Black logo - no background_1754217747975.png\";\nimport { Linkedin, Twitter, Instagram } from \"lucide-react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"py-20 px-6 lg:px-8 border-t border-gray-100 bg-gradient-to-b from-gray-50/30 to-white\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"grid md:grid-cols-4 gap-12 mb-16\">\n          {/* Brand */}\n          <div className=\"md:col-span-2\">\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <img \n                src={logoImage} \n                alt=\"Peter Jamieson - Chief Information Officer\" \n                className=\"h-10 w-auto\"\n              />\n              <div>\n                <h2 className=\"text-apple-text font-bold text-xl tracking-apple mb-1\">Peter Jamieson</h2>\n                <p className=\"text-sm font-medium text-[#000205]\">Technologist, Digital Transformation Leader, AI Advocate</p>\n              </div>\n            </div>\n            <p className=\"text-apple-gray text-base leading-relaxed mb-6 max-w-md\">Digital Transformation Leader specializing in enterprise architecture, cloud strategy, and AI integration across retail, real estate, government, and construction sectors. Based in Dubai, United Arab Emirates.</p>\n          </div>\n          \n          {/* Quick Links */}\n          <div>\n            <h3 className=\"font-bold text-apple-text text-lg mb-6\">Quick Links</h3>\n            <nav className=\"space-y-3\">\n              <a href=\"#about\" className=\"block text-apple-gray hover:text-apple-blue transition-all duration-200 text-sm hover:translate-x-1 font-medium\">About</a>\n              <a href=\"#articles\" className=\"block text-apple-gray hover:text-apple-blue transition-all duration-200 text-sm hover:translate-x-1 font-medium\">Articles</a>\n              <a href=\"#expertise\" className=\"block text-apple-gray hover:text-apple-blue transition-all duration-200 text-sm hover:translate-x-1 font-medium\">Expertise</a>\n              <a href=\"#experience\" className=\"block text-apple-gray hover:text-apple-blue transition-all duration-200 text-sm hover:translate-x-1 font-medium\">Experience</a>\n              <a href=\"#contact\" className=\"block text-apple-gray hover:text-apple-blue transition-all duration-200 text-sm hover:translate-x-1 font-medium\">Contact</a>\n            </nav>\n          </div>\n          \n          {/* Connect */}\n          <div>\n            <h3 className=\"font-bold text-apple-text text-lg mb-6\">Connect</h3>\n            <div className=\"flex space-x-3 mb-6\">\n              <a \n                href=\"https://linkedin.com/in/pjamieson\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"group w-12 h-12 bg-white hover:bg-apple-blue border border-gray-200 hover:border-apple-blue rounded-xl flex items-center justify-center transition-all duration-300 shadow-sm hover:shadow-lg hover:scale-105\"\n                aria-label=\"Connect on LinkedIn\"\n              >\n                <Linkedin className=\"w-5 h-5 text-gray-600 group-hover:text-white transition-colors duration-300\" />\n              </a>\n              <a \n                href=\"https://twitter.com/digitaljamieson\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"group w-12 h-12 bg-white hover:bg-apple-blue border border-gray-200 hover:border-apple-blue rounded-xl flex items-center justify-center transition-all duration-300 shadow-sm hover:shadow-lg hover:scale-105\"\n                aria-label=\"Follow on Twitter\"\n              >\n                <Twitter className=\"w-5 h-5 text-gray-600 group-hover:text-white transition-colors duration-300\" />\n              </a>\n              <a \n                href=\"https://instagram.com/peterjamieson\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"group w-12 h-12 bg-white hover:bg-apple-blue border border-gray-200 hover:border-apple-blue rounded-xl flex items-center justify-center transition-all duration-300 shadow-sm hover:shadow-lg hover:scale-105\"\n                aria-label=\"Follow on Instagram\"\n              >\n                <Instagram className=\"w-5 h-5 text-gray-600 group-hover:text-white transition-colors duration-300\" />\n              </a>\n            </div>\n          </div>\n        </div>\n        \n        {/* Bottom */}\n        <div className=\"pt-10 border-t border-gray-200 flex flex-col md:flex-row justify-between items-center\">\n          <p className=\"text-apple-gray text-sm font-medium\">© 2025 Peter Jamieson. All rights reserved.</p>\n          <p className=\"text-apple-gray text-sm font-medium mt-3 md:mt-0\">Technologist | Digital Transformation Leader | AI Advocate</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":4814},"client/src/components/hero-section.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { ArrowRight } from \"lucide-react\";\nimport type { Profile } from \"@shared/schema\";\nimport heroBackground from \"@assets/image_1754206514764.png\";\nimport whiteLogo from \"@assets/White logo - no background_1754209764924.png\";\n\nexport default function HeroSection() {\n  const { data: profile } = useQuery<Profile>({\n    queryKey: [\"/api/profile\"],\n  });\n\n  return (\n    <section \n      className=\"pt-20 md:pt-28 pb-16 md:pb-20 px-4 md:px-6 lg:px-8 relative bg-cover bg-no-repeat min-h-[60vh] md:min-h-[75vh] flex items-center hero-bg-mobile\"\n      style={{ backgroundImage: `url(${heroBackground})` }}\n    >\n      {/* Dark overlay for better text readability */}\n      <div className=\"absolute inset-0 bg-black/30\"></div>\n      \n      <div className=\"max-w-7xl mx-auto text-center relative z-10\">\n        <div className=\"max-w-4xl mx-auto\">\n        <img \n          src={whiteLogo} \n          alt=\"Peter Jamieson\" \n          className=\"h-16 sm:h-20 md:h-24 lg:h-32 w-auto mx-auto mb-4 md:mb-6 drop-shadow-lg\"\n        />\n        \n        <p className=\"text-base sm:text-lg md:text-xl lg:text-2xl text-gray-200 font-light leading-relaxed mb-6 md:mb-12 max-w-3xl mx-auto drop-shadow-md px-4\">\n          {profile?.tagline || \"Technologist | Digital Transformation Leader | AI Advocate\"}\n        </p>\n        \n        \n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1416},"client/src/components/navigation.tsx":{"content":"import { useState } from \"react\";\nimport { Menu, X } from \"lucide-react\";\nimport logoImage from \"@assets/Black logo - no background_1754217747975.png\";\n\nexport default function Navigation() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  return (\n    <>\n      {/* Skip to content link for accessibility */}\n      <a \n        href=\"#main-content\" \n        className=\"sr-only focus:not-sr-only focus:absolute focus:top-0 focus:left-0 bg-apple-blue text-white px-4 py-2 z-[60] rounded-br transition-all\"\n      >\n        Skip to main content\n      </a>\n      \n      <nav \n        className=\"fixed top-0 left-0 right-0 z-50 backdrop-blur-safari bg-white/80 border-b border-gray-200/50\"\n        role=\"navigation\"\n        aria-label=\"Main navigation\"\n      >\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          <div className=\"flex items-center\">\n            <img \n              src={logoImage} \n              alt=\"Personal Brand Logo\" \n              className=\"h-12 w-auto\"\n            />\n          </div>\n          \n          <div className=\"hidden md:flex space-x-8\" role=\"menubar\">\n            <a href=\"#about\" className=\"text-apple-text hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded px-2 py-1 transition-colors duration-200\" role=\"menuitem\">About</a>\n            <a href=\"#articles\" className=\"text-apple-text hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded px-2 py-1 transition-colors duration-200\" role=\"menuitem\">Articles</a>\n            <a href=\"#expertise\" className=\"text-apple-text hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded px-2 py-1 transition-colors duration-200\" role=\"menuitem\">Expertise</a>\n            <a href=\"#experience\" className=\"text-apple-text hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded px-2 py-1 transition-colors duration-200\" role=\"menuitem\">Experience</a>\n            <a href=\"#contact\" className=\"text-apple-text hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded px-2 py-1 transition-colors duration-200\" role=\"menuitem\">Contact</a>\n          </div>\n          \n          <button \n            className=\"md:hidden text-apple-text focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded-md p-1\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n            aria-expanded={isMenuOpen}\n            aria-controls=\"mobile-menu\"\n            aria-label=\"Toggle navigation menu\"\n          >\n            {isMenuOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n          </button>\n        </div>\n        \n        {isMenuOpen && (\n          <div className=\"md:hidden\" id=\"mobile-menu\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white border-t border-gray-200\" role=\"menu\">\n              <a href=\"#about\" className=\"block px-3 py-2 text-apple-text hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded transition-colors\" role=\"menuitem\">About</a>\n              <a href=\"#articles\" className=\"block px-3 py-2 text-apple-text hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded transition-colors\" role=\"menuitem\">Articles</a>\n              <a href=\"#expertise\" className=\"block px-3 py-2 text-apple-text hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded transition-colors\" role=\"menuitem\">Expertise</a>\n              <a href=\"#experience\" className=\"block px-3 py-2 text-apple-text hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded transition-colors\" role=\"menuitem\">Experience</a>\n              <a href=\"#contact\" className=\"block px-3 py-2 text-apple-text hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded transition-colors\" role=\"menuitem\">Contact</a>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n    </>\n  );\n}\n","size_bytes":4483},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/error-utils.tsx":{"content":"import { useLocation } from 'wouter';\n\n// Error handling utility functions\n\n/**\n * Navigate to a custom error page\n */\nexport function navigateToError(status: number) {\n  window.location.href = `/error/${status}`;\n}\n\n/**\n * Handle API errors and redirect to appropriate error pages\n */\nexport function handleApiError(error: any, defaultStatus = 500) {\n  const status = error?.status || error?.response?.status || defaultStatus;\n  \n  // Log the error for debugging\n  console.error('API Error:', error);\n  \n  // Track error in analytics if available\n  if (typeof window !== 'undefined' && (window as any).gtag) {\n    (window as any).gtag('event', 'exception', {\n      description: `API Error ${status}: ${error?.message || 'Unknown error'}`,\n      fatal: false\n    });\n  }\n  \n  // Navigate to error page for server errors\n  if (status >= 500) {\n    navigateToError(status);\n  }\n  \n  return status;\n}\n\n/**\n * Custom hook for error boundary integration\n */\nexport function useErrorHandler() {\n  const [, setLocation] = useLocation();\n\n  const handleError = (error: Error, context?: string) => {\n    console.error(`Error in ${context || 'component'}:`, error);\n    \n    // Track error in analytics\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'exception', {\n        description: `${context || 'Component'} Error: ${error.message}`,\n        fatal: false\n      });\n    }\n    \n    // For development, throw the error to trigger error boundary\n    if (process.env.NODE_ENV === 'development') {\n      throw error;\n    }\n    \n    // For production, navigate to error page\n    setLocation('/error/500');\n  };\n\n  return { handleError };\n}\n\n/**\n * Async error wrapper for promise-based operations\n */\nexport async function withErrorHandling<T>(\n  operation: () => Promise<T>,\n  context?: string\n): Promise<T | null> {\n  try {\n    return await operation();\n  } catch (error) {\n    console.error(`Error in ${context || 'async operation'}:`, error);\n    \n    // Track error in analytics\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'exception', {\n        description: `${context || 'Async'} Error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        fatal: false\n      });\n    }\n    \n    // Handle different types of errors\n    if (error instanceof Error) {\n      const status = (error as any).status || 500;\n      if (status >= 500) {\n        navigateToError(status);\n      }\n    }\n    \n    return null;\n  }\n}\n\n/**\n * Error types for better error handling\n */\nexport class AppError extends Error {\n  status: number;\n  context?: string;\n  \n  constructor(message: string, status: number = 500, context?: string) {\n    super(message);\n    this.name = 'AppError';\n    this.status = status;\n    this.context = context;\n  }\n}\n\n/**\n * Network error class\n */\nexport class NetworkError extends AppError {\n  constructor(message: string = 'Network error occurred', status: number = 500) {\n    super(message, status, 'Network');\n    this.name = 'NetworkError';\n  }\n}\n\n/**\n * Validation error class\n */\nexport class ValidationError extends AppError {\n  constructor(message: string = 'Validation failed', status: number = 400) {\n    super(message, status, 'Validation');\n    this.name = 'ValidationError';\n  }\n}","size_bytes":3312},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/article.tsx":{"content":"import { useRoute } from \"wouter\";\nimport { useEffect } from \"react\";\nimport { ArrowLeft, Calendar, Clock, Tag } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Helmet } from \"react-helmet-async\";\n\ninterface ArticleData {\n  title: string;\n  content: string;\n  category: string;\n  readTime: string;\n  publishDate: string;\n  author: string;\n}\n\nconst articles: Record<string, ArticleData> = {\n  \"seo-strategy-modern-businesses\": {\n    title: \"The End of Googling: How AI Search is Redefining Business Discovery\",\n    category: \"Digital Marketing\",\n    readTime: \"12 min read\",\n    publishDate: \"August 2025\",\n    author: \"Peter Jamieson\",\n    content: `\n      <div class=\"prose prose-lg max-w-none\">\n        <h2>The Search Revolution is Here—And It's Not What You Think</h2>\n        <p>Remember the last time you asked a question and had to click through seven different websites to find a decent answer? That frustration is becoming a relic of the past. We're witnessing the end of an era—not just the end of traditional search, but the fundamental transformation of how humans discover information.</p>\n        \n        <p>ChatGPT now sees over 3.7 billion visits a month, hitting a record-breaking 80 million visits in a single day. Perplexity processed 780 million queries in May 2025 alone, experiencing more than 20% month-over-month growth. These aren't just impressive numbers—they represent a seismic shift in human behavior that's about to reshape every business strategy on the planet.</p>\n        \n        <p>The era of \"Googling\" is giving way to the age of \"asking\"—and if your business isn't prepared for this transition, you're about to become invisible to an entirely new generation of searchers.</p>\n        \n        <h2>From Blue Links to Direct Answers: The Great Unbundling</h2>\n        <p>For over two decades, Google's formula was simple: show you ten blue links and let you figure out the rest. This created an entire industry—SEO—built around the art and science of ranking #1 in those links. But Google's own AI Mode presents a \"re-imagining of Search\" that eliminates the traditional 10 blue links entirely.</p>\n        \n        <p>The shift is profound. Instead of navigating to multiple websites, users now get comprehensive, cited answers in a single interface. AI search visitors convert 4.4 times better than traditional organic search visitors because they arrive at websites already equipped with the information they need to make decisions.</p>\n        \n        <p>This isn't just a minor interface update—it's the complete restructuring of how information flows from businesses to consumers. 65% of users now cite Perplexity as their preferred search engine, with 82% saying its interface is cleaner and easier to use than Google or Bing.</p>\n        \n        <h2>The New Search Landscape: Beyond Google</h2>\n        <p>While Google scrambles to integrate AI features, an entirely new ecosystem of search experiences is emerging:</p>\n        \n        <p><strong>ChatGPT as Search Engine</strong>: People aren't replacing Google entirely—they're replacing Google for specific types of queries, particularly top-of-funnel informational searches. When someone wants to understand a complex topic, compare options, or learn something new, they're increasingly turning to conversational AI.</p>\n        \n        <p><strong>Perplexity's Rise</strong>: Valued at $18 billion and processing 30 million queries daily, Perplexity has positioned itself as the \"answer engine\" that provides cited, real-time responses. Unlike ChatGPT's training data cutoffs, Perplexity searches the live web and provides sources—making it increasingly attractive for current information.</p>\n        \n        <p><strong>Claude's Professional Focus</strong>: Anthropic's Claude has carved out a niche among professionals and researchers who need thoughtful, well-reasoned responses. Its strength in analysis and writing makes it particularly valuable for business applications.</p>\n        \n        <p><strong>Gemini's Integration</strong>: Google's own Gemini is being integrated across its ecosystem, representing the company's bet on conversational search within its existing products.</p>\n        \n        <h2>The SEO Apocalypse? Not Exactly.</h2>\n        <p>Here's where most analysis gets it wrong. Traditional SEO isn't dying—it's evolving into something much more complex and, frankly, more interesting.</p>\n        \n        <p>Current AI search still drives less than 1% of traffic to most sites, with Google Search remaining the dominant traffic source. But the trends are unmistakable: digital marketing and SEO-related topics may start driving more visitors from AI search than traditional search by early 2028.</p>\n        \n        <p>The key insight is that when ChatGPT search cites webpages, the pages it cites rank in traditional organic search positions 21+ almost 90% of the time. This means AI systems aren't just rewarding the same pages that rank #1 in Google—they're drawing from a much broader pool of content.</p>\n        \n        <h2>What This Means for Business Discovery</h2>\n        <p>The implications for how businesses get discovered are staggering:</p>\n        \n        <p><strong>Citation Over Clicks</strong>: Citation frequency in AI responses becomes a key indicator, measured by regularly testing your expertise topics on ChatGPT, Claude, and Perplexity. Getting mentioned is becoming as important as getting clicked.</p>\n        \n        <p><strong>Authority Over Rankings</strong>: Thematic authority is now measured by the ability to be cited as an expertise source, with mentions in specialized publications and sector reports strengthening credibility in the eyes of AI algorithms.</p>\n        \n        <p><strong>Quality Over Quantity</strong>: Expert content that never appears in AI responses signals a visibility or credibility problem. The bar for quality is higher because AI systems can access and compare vast amounts of content instantly.</p>\n        \n        <p><strong>Platform Diversification</strong>: Different LLMs cite different sources most frequently—OpenAI cites Wikipedia most often, Perplexity frequently cites Reddit and YouTube, Google's AI Overviews cite YouTube, and Microsoft Copilot cites Forbes and Gartner.</p>\n        \n        <h2>The Three Pillars of AI Search Optimization</h2>\n        <p>Smart businesses are already adapting by focusing on three key areas:</p>\n        \n        <h3>1. Expertise and Authority</h3>\n        <p>AI systems prioritize content that demonstrates deep expertise and clear authority. This means:</p>\n        <ul>\n          <li>Creating comprehensive, well-researched content that covers topics in depth</li>\n          <li>Building relationships with authoritative publications and industry sources</li>\n          <li>Developing proprietary research and data that becomes citable</li>\n          <li>Establishing thought leadership through consistent, high-quality output</li>\n        </ul>\n        \n        <h3>2. Multi-Platform Presence</h3>\n        <p>Search has become cross-platform, with users starting their searches across social platforms like TikTok, LinkedIn, YouTube, X and Bluesky. Successful businesses are:</p>\n        <ul>\n          <li>Creating content optimized for multiple AI platforms simultaneously</li>\n          <li>Building presence across the platforms most frequently cited by different AI systems</li>\n          <li>Developing content strategies that work across both traditional search and AI responses</li>\n        </ul>\n        \n        <h3>3. Transparency and Credibility</h3>\n        <p>AI systems value transparent, well-sourced information. This requires:</p>\n        <ul>\n          <li>Clear attribution and sourcing in all content</li>\n          <li>Transparent methodologies and data collection processes</li>\n          <li>Building digital credentials that AI systems can easily identify and trust</li>\n          <li>Creating content that other authoritative sources want to cite and reference</li>\n        </ul>\n        \n        <h2>The Business Impact: Winners and Losers</h2>\n        <p>This transformation is creating clear winners and losers:</p>\n        \n        <p><strong>Winners</strong>: Businesses that create authoritative, well-sourced content and build genuine expertise. Companies that adapt their discovery strategies to multiple AI platforms. Organizations that focus on being helpful rather than just ranking well.</p>\n        \n        <p><strong>Losers</strong>: Businesses that relied primarily on gaming traditional SEO. Companies that created thin, derivative content. Organizations that built their discovery strategy around a single platform or ranking factor.</p>\n        \n        <p><strong>The Surprising Middle Ground</strong>: Sites dealing with easily commoditized information (general news, basic definitions) are more vulnerable, while sites providing documented expertise, clear methodologies, and concrete examples become indispensable partners in the AI ecosystem.</p>\n        \n        <h2>Preparing for the Post-Google Future</h2>\n        <p>The most forward-thinking businesses are taking a three-pronged approach:</p>\n        \n        <p><strong>Immediate Actions</strong>:</p>\n        <ul>\n          <li>Audit current content for AI citation potential by testing key topics across ChatGPT, Claude, and Perplexity</li>\n          <li>Identify and strengthen relationships with authoritative sources in your industry</li>\n          <li>Begin creating more comprehensive, well-sourced content that demonstrates expertise</li>\n        </ul>\n        \n        <p><strong>Medium-term Strategy</strong>:</p>\n        <ul>\n          <li>Develop content strategies optimized for both traditional search and AI responses</li>\n          <li>Build presence across multiple platforms where your audience might discover information</li>\n          <li>Create proprietary research and data that becomes inherently citable</li>\n        </ul>\n        \n        <p><strong>Long-term Positioning</strong>:</p>\n        <ul>\n          <li>Establish your business as the definitive authority in your niche</li>\n          <li>Build partnerships with other authoritative sources and platforms</li>\n          <li>Develop direct relationships with your audience that don't depend on any single discovery mechanism</li>\n        </ul>\n        \n        <h2>The Paradox of AI Search</h2>\n        <p>Here's the fascinating paradox: as AI search becomes more sophisticated, the value of genuinely authoritative, expert content increases dramatically. AI systems need high-quality sources to provide accurate answers, creating opportunities for businesses that invest in real expertise and authority.</p>\n        \n        <p>Google actively collates content from various websites and summarizes it using Gemini, with guidelines emphasizing creating \"content that fulfills people's needs\" and \"unique, non-commodity content that visitors from Search will find helpful and satisfying\".</p>\n        \n        <p>This isn't about gaming new algorithms—it's about becoming genuinely useful and authoritative in ways that both humans and AI systems recognize and value.</p>\n        \n        <h2>The Road Ahead</h2>\n        <p>We're still in the early stages of this transformation. AI search engagement is expected to increase as the technology becomes more familiar and accessible, and the shift is from search engine optimization to search everywhere optimization—or OmniSEO.</p>\n        \n        <p>The businesses that thrive in this new era won't be those that master the latest AI search tactics, but those that genuinely solve problems, create valuable content, and build real authority in their fields. The age of shortcuts is ending; the age of authentic expertise is beginning.</p>\n        \n        <p>The question isn't whether this transformation will happen—it's already underway. The question is whether your business will be part of the conversation when millions of people ask AI systems about your industry, your products, or your services.</p>\n        \n        <p>The era of Googling is ending. The era of asking has begun. And in this new world, being found isn't about ranking #1—it's about being the answer that matters.</p>\n        \n        <blockquote>\n          <em>The search revolution is here. The only question is: will you be part of it?</em>\n        </blockquote>\n      </div>\n    `\n  },\n  \"digital-transformation-roadmap\": {\n    title: \"The Corporate AI Mandate: When \\\"Optional\\\" Becomes \\\"Essential\\\"\",\n    category: \"Strategy\",\n    readTime: \"10 min read\",\n    publishDate: \"August 2025\",\n    author: \"Peter Jamieson\",\n    content: `\n      <div class=\"prose prose-lg max-w-none\">\n        <h2>The New Reality: AI is No Longer a Choice</h2>\n        <p>The memo that landed in every Duolingo employee's inbox on April 28th was unambiguous: artificial intelligence was now a company priority. Contractors would be phased out if AI could handle their work. New hires would only be approved if teams could prove the work couldn't be automated. AI proficiency would become part of performance reviews.</p>\n        \n        <p>The backlash was immediate and brutal. \"AI first means people last,\" wrote one critic. Social media erupted with threats to cancel subscriptions and accusations of corporate callousness. But here's what the outrage missed: Duolingo wasn't announcing a new trend—it was simply saying out loud what dozens of companies are quietly implementing across the corporate world.</p>\n        \n        <p>Welcome to the era of mandatory AI productivity.</p>\n        \n        <h2>The Numbers Tell the Story</h2>\n        <p>The shift is already underway, whether companies announce it or not. According to recent research, 75% of knowledge workers now use AI at work, with 46% having started in just the last six months. More telling: 78% of AI users are bringing their own tools to work without official approval, creating what experts call \"shadow AI\" adoption.</p>\n        \n        <p>But 2025 marks a turning point. Companies are moving from tolerating grassroots AI adoption to actively mandating it. Yahoo Japan represents the most aggressive example, requiring all 11,000 employees to use generative AI tools daily with a company-wide goal of doubling productivity by 2030. The policy includes mandatory AI training and usage tracking—making AI proficiency as essential as email literacy once was.</p>\n        \n        <p>The data shows why executives are pushing this transition. Workers using generative AI report saving 5.4% of their work hours weekly, translating to a 1.1% productivity increase for entire workforces. At scale, these numbers represent billions in potential cost savings and competitive advantage.</p>\n        \n        <h2>The Executive Imperative: Adapt or Fall Behind</h2>\n        <p>For corporate leaders, the math is compelling. Among executives surveyed, 96% expect AI tools to increase their company's overall productivity levels. Nearly 40% of companies now require employees to use AI tools, with an additional 46% encouraging their use. The writing is on the wall: AI integration has moved from experimental to essential.</p>\n        \n        <p>Box CEO Aaron Levie captured the sentiment perfectly: \"In engineering, we're probably in the final generation where you can go into a company with no AI coding expertise.\" At his company, AI isn't just encouraged—it's becoming a baseline expectation for competitive employment.</p>\n        \n        <p>This urgency stems from competitive pressure. As one executive put it, 79% of leaders agree their company needs to adopt AI to stay competitive, but 60% worry their organization lacks a clear implementation plan. The result? Companies are mandating AI use first and figuring out strategy second.</p>\n        \n        <h2>The Great Divide: Leadership Vision vs. Employee Reality</h2>\n        <p>Here's where the corporate AI mandate hits a wall: the gap between executive expectations and employee experience. While leaders trumpet productivity gains, the reality on the ground is more complex.</p>\n        \n        <p>Nearly half (47%) of employees using AI say they have no idea how to achieve the productivity gains their employers expect. More surprisingly, 77% report that AI tools have actually decreased their productivity and added to their workload. This contradiction reveals a fundamental problem: companies are mandating AI use without providing adequate training or clear use cases.</p>\n        \n        <p>The human cost is significant. Thirty percent of employees who use AI tools worry their job may be cut, while 27% experience \"AI-fueled imposter syndrome\"—anxiety about whether their contributions are genuinely their own. Most tellingly, 32% of employees using AI keep it secret from their employers, either because they enjoy the \"secret advantage\" or fear job security implications.</p>\n        \n        <h2>The Backlash: When \\\"AI-First\\\" Meets Human-First Expectations</h2>\n        <p>Duolingo's experience illustrates the delicate balance companies must strike. CEO Luis von Ahn's initial memo triggered such intense criticism that he was forced to clarify his position three weeks later, emphasizing that AI would \"accelerate what we do\" rather than replace employees. The damage was done, however—users threatened boycotts, social media erupted with criticism, and the company's carefully cultivated brand image took a significant hit.</p>\n        \n        <p>The pattern is repeating across corporate America. Klarna, after publicly celebrating its AI chatbot's success and implementing a hiring freeze, quietly began recruiting human workers again when the \"lower quality\" of AI interactions became apparent. Shopify faced similar criticism after internal memos suggested AI-driven productivity would replace new hires.</p>\n        \n        <h2>The Strategic Challenge: Implementation vs. Innovation</h2>\n        <p>The corporate AI mandate reveals a deeper strategic challenge. Companies are caught between the need for competitive advantage and the reality of human organizational dynamics. The most successful implementations share common characteristics:</p>\n        \n        <p><strong>Clear Communication</strong>: Companies that frame AI as augmentation rather than replacement see better adoption rates and less resistance.</p>\n        \n        <p><strong>Training Investment</strong>: Only 39% of people using AI at work have received company training, creating a massive skills gap that undermines productivity goals.</p>\n        \n        <p><strong>Gradual Integration</strong>: Organizations that start with specific use cases—document creation, data analysis, customer service—see more sustainable adoption than those mandating broad AI use immediately.</p>\n        \n        <p><strong>Employee Agency</strong>: Workers want autonomy over how they integrate AI into their workflows rather than top-down mandates about specific tools or methods.</p>\n        \n        <h2>The Path Forward: Strategic AI Adoption</h2>\n        <p>The most forward-thinking companies are taking a more nuanced approach. Rather than blanket mandates, they're identifying specific workflows where AI delivers clear value, providing comprehensive training, and giving employees agency over how they integrate these tools.</p>\n        \n        <p>Google, for instance, now gives software engineering candidates access to AI tools during interviews—not to replace human judgment, but to assess how effectively candidates can collaborate with AI. This approach recognizes that the future of work isn't about humans versus AI, but about humans working effectively with AI.</p>\n        \n        <h2>Conclusion: The Inevitable Transformation</h2>\n        <p>The corporate AI mandate isn't a question of if, but when and how. Every company will eventually require some level of AI fluency from its workforce—the technology's competitive advantages are too significant to ignore. The question is whether organizations will learn from early adopters' mistakes or repeat them.</p>\n        \n        <p>For employees, the message is clear: AI literacy is becoming as fundamental as computer literacy was in the 1990s. Those who embrace this reality and develop AI collaboration skills will thrive; those who resist risk being left behind.</p>\n        \n        <p>For executives, the lesson is equally clear: mandating AI use without addressing employee concerns, providing adequate training, and maintaining human-centered values will likely backfire. The companies that succeed will be those that make AI adoption feel like empowerment rather than replacement.</p>\n        \n        <blockquote>\n          <em>The transformation is inevitable. How companies navigate it will determine whether AI becomes a productivity superpower or a source of organizational disruption. The choice—and the consequences—remain firmly in human hands.</em>\n        </blockquote>\n      </div>\n    `\n  },\n  \"ai-integration-enterprise\": {\n    title: \"Beyond Chatbots: How Vertical AI is Creating the Next Wave of Billion-Dollar Companies\",\n    category: \"Technology\",\n    readTime: \"11 min read\",\n    publishDate: \"August 2025\",\n    author: \"Peter Jamieson\",\n    content: `\n      <div class=\"prose prose-lg max-w-none\">\n        <p>While the world fixates on ChatGPT and Claude, a quieter revolution is unfolding in law firms, hospitals, and laboratories. Specialized AI companies targeting specific industries are achieving growth rates and valuations that dwarf their horizontal counterparts, creating what experts are calling the \"vertical AI gold rush.\"</p>\n        \n        <p>The numbers tell a compelling story. Harvey AI, focused exclusively on legal workflows, reached a $1.5 billion valuation in just two years. Glean, building enterprise search for knowledge workers, commands a $4.6 billion valuation. Meanwhile, PathAI, applying artificial intelligence to pathology, has attracted over $255 million in funding from investors betting on AI's potential to transform medical diagnosis.</p>\n        \n        <p>These aren't isolated success stories. They represent a fundamental shift in how AI value is being created and captured in the economy.</p>\n        \n        <h2>The Vertical Advantage: Why Specialization Wins</h2>\n        <p>General-purpose AI models like GPT-4 and Claude are remarkable technological achievements, but they face a crucial limitation: they must be all things to all people. Vertical AI companies, by contrast, can optimize every aspect of their solution for specific use cases, creating defensible moats that horizontal players struggle to replicate.</p>\n        \n        <p>Consider Hebbia, an AI research platform that reached a $700 million valuation by focusing exclusively on complex document analysis for financial services and consulting firms. While ChatGPT can summarize documents, Hebbia can navigate intricate financial models, understand regulatory nuances, and generate investment committee-ready analyses. This specialization allows them to charge premium prices while maintaining customer loyalty that generic tools cannot match.</p>\n        \n        <p>The data supports this thesis. Vertical AI companies are achieving net retention rates of 120-150%, compared to 110-130% for horizontal SaaS tools. Their customers aren't just satisfied—they're expanding usage as the AI becomes integral to core business processes.</p>\n        \n        <h2>Industry-Specific Breakthroughs Driving Growth</h2>\n        \n        <h3>Legal Technology Revolution</h3>\n        <p>The legal industry, traditionally resistant to technological change, is experiencing unprecedented AI adoption. Harvey AI has partnered with elite law firms including Allen & Overy and PwC, automating everything from contract review to regulatory compliance. The company processes millions of legal documents monthly, with lawyers reporting 40-60% time savings on routine tasks.</p>\n        \n        <p>What makes Harvey's approach powerful isn't just the time savings—it's the domain expertise embedded in the AI. The system understands legal precedent, jurisdictional differences, and the subtle language patterns that determine case outcomes. This level of specialization would be impossible to achieve in a general-purpose model.</p>\n        \n        <h3>Healthcare's AI Transformation</h3>\n        <p>Healthcare represents perhaps the largest vertical AI opportunity, with companies like Tempus and PathAI leading the charge. Tempus, valued at $8.1 billion, has built an AI platform that analyzes clinical and molecular data to personalize cancer treatment. Their approach combines patient data, genomic sequencing, and treatment outcomes to recommend therapy options with unprecedented precision.</p>\n        \n        <p>PathAI focuses on an even more specific niche: computational pathology. By training AI models exclusively on tissue samples and diagnostic patterns, they've achieved accuracy rates that exceed human pathologists in certain cancer detection scenarios. This specialization has attracted partnerships with major pharmaceutical companies and healthcare systems worldwide.</p>\n        \n        <h3>Manufacturing and Industrial Applications</h3>\n        <p>Industrial AI companies are achieving remarkable results by focusing on specific operational challenges. C3 AI, despite facing public market volatility, continues to win major enterprise contracts by offering AI solutions tailored to energy, manufacturing, and supply chain optimization.</p>\n        \n        <p>Newer entrants like Palantir's commercial division are achieving growth by building AI solutions for specific industrial use cases rather than generic analytics platforms. Their manufacturing clients report 15-25% improvements in operational efficiency through AI-driven predictive maintenance and quality control.</p>\n        \n        <h2>The Economics of Vertical AI</h2>\n        <p>The financial metrics of vertical AI companies reveal why investors are paying premium valuations. Unlike horizontal SaaS companies that compete primarily on price and features, vertical AI companies compete on outcomes. When Harvey AI saves a law firm 1,000 hours of associate time per month, the ROI calculation is straightforward and compelling.</p>\n        \n        <p>This outcome-based value proposition enables different pricing models. Many vertical AI companies are moving beyond traditional SaaS subscriptions to usage-based or outcome-sharing arrangements. Some legal AI companies charge based on contracts processed or compliance issues identified. Healthcare AI firms earn revenue sharing based on cost savings or improved patient outcomes.</p>\n        \n        <p>These models create more predictable, sustainable revenue streams while aligning vendor incentives with customer success.</p>\n        \n        <h2>The Moat-Building Playbook</h2>\n        <p>Successful vertical AI companies follow a consistent playbook for building defensible competitive advantages:</p>\n        \n        <p><strong>Data Network Effects</strong>: Companies like Tempus and PathAI become more valuable as they process more industry-specific data. Each additional customer strengthens their models, creating competitive barriers that generic AI providers cannot easily overcome.</p>\n        \n        <p><strong>Regulatory Expertise</strong>: Industries like healthcare and financial services have complex regulatory requirements. Vertical AI companies that master these compliance challenges build significant switching costs and entry barriers.</p>\n        \n        <p><strong>Integration Depth</strong>: Rather than offering standalone tools, leading vertical AI companies integrate deeply into existing workflows and systems. Harvey AI doesn't just analyze contracts—it integrates with legal practice management systems, billing platforms, and client communication tools.</p>\n        \n        <p><strong>Domain Expert Teams</strong>: The most successful companies combine AI expertise with deep industry knowledge. PathAI's team includes practicing pathologists, while Harvey AI employs former BigLaw attorneys. This domain expertise is difficult for horizontal players to replicate at scale.</p>\n        \n        <h2>The Next Wave: Emerging Opportunities</h2>\n        <p>Several industries appear ripe for vertical AI disruption. Agriculture, construction, and education represent massive markets with fragmented technology adoption and clear use cases for AI optimization.</p>\n        \n        <p>In agriculture, companies like Climate Corporation (acquired by Monsanto for $1.1 billion) demonstrated the potential for AI-driven crop optimization. New entrants are building on this foundation with more sophisticated models that incorporate weather data, soil analysis, and market pricing to optimize farming decisions.</p>\n        \n        <p>Construction, a $12 trillion global industry, remains largely analog despite obvious opportunities for AI optimization in project management, safety monitoring, and resource allocation. Early-stage companies like Built Robotics and Dusty Robotics are beginning to capture this opportunity.</p>\n        \n        <h2>Investment Implications and Market Dynamics</h2>\n        <p>The venture capital community has taken notice of vertical AI's superior metrics. Despite overall AI funding becoming more selective, vertical AI companies continue to raise substantial rounds at premium valuations. The key insight driving this investment thesis: vertical AI companies can achieve both scale and profitability more reliably than horizontal platforms.</p>\n        \n        <p>However, the window for establishing market position is narrowing. As industries become more educated about AI capabilities, they're becoming more sophisticated buyers. First-mover advantages in vertical AI are proving durable, making early market entry crucial for long-term success.</p>\n        \n        <h2>The Future of Specialized Intelligence</h2>\n        <p>The vertical AI revolution represents more than just a business model shift—it signals the maturation of artificial intelligence from experimental technology to essential business infrastructure. As AI capabilities continue advancing, the companies that will capture the most value are those that understand their customers' specific problems deeply enough to build truly specialized solutions.</p>\n        \n        <p>For entrepreneurs, the opportunity is clear: identify an industry with complex, repetitive processes and build AI solutions that don't just automate tasks, but enhance human capabilities in ways that create measurable business value. For investors, the lesson is equally straightforward: depth beats breadth in the AI economy.</p>\n        \n        <blockquote>\n          <em>The next wave of billion-dollar AI companies won't be built by creating better chatbots. They'll be built by solving specific, valuable problems for specific industries better than anyone else—and that's exactly what's happening right now.</em>\n        </blockquote>\n      </div>\n    `\n  }\n};\n\nexport default function Article() {\n  const [match, params] = useRoute(\"/article/:slug\");\n  \n  // Scroll to top when component mounts\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  \n  if (!match || !params?.slug) {\n    return <div>Article not found</div>;\n  }\n\n  const article = articles[params.slug];\n  \n  if (!article) {\n    return <div>Article not found</div>;\n  }\n\n  // Generate article URL\n  const articleUrl = `https://jamieson.digital/article/${params.slug}`;\n  const articleImage = `https://jamieson.digital/article-${params.slug}-social.jpg`;\n\n  return (\n    <div className=\"bg-white min-h-screen\">\n      <Helmet>\n        {/* Article-specific meta tags */}\n        <title>{article.title} | Peter Jamieson</title>\n        <link rel=\"canonical\" href={`https://jamieson.digital/article/${params.slug}`} />\n        <meta name=\"description\" content={`${article.title} - Expert insights from Peter Jamieson, CIO and Digital Transformation Leader. ${article.readTime}.`} />\n        <meta name=\"author\" content=\"Peter Jamieson, Fellow BCS, CIO50 Middle East\" />\n        <meta name=\"article:author\" content=\"Peter Jamieson\" />\n        <meta name=\"article:published_time\" content={`${article.publishDate}-01T00:00:00Z`} />\n        <meta name=\"article:section\" content={article.category} />\n        <meta name=\"article:tag\" content=\"Digital Transformation, Technology Leadership, AI, Enterprise Architecture\" />\n        \n        {/* Canonical URL */}\n        <link rel=\"canonical\" href={articleUrl} />\n        \n        {/* Open Graph for articles */}\n        <meta property=\"og:title\" content={`${article.title} | Peter Jamieson`} />\n        <meta property=\"og:description\" content={`Expert insights from Peter Jamieson, CIO and Digital Transformation Leader. ${article.readTime}.`} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:url\" content={articleUrl} />\n        <meta property=\"og:image\" content={articleImage} />\n        <meta property=\"og:site_name\" content=\"Peter Jamieson\" />\n        <meta property=\"article:author\" content=\"Peter Jamieson\" />\n        <meta property=\"article:section\" content={article.category} />\n        \n        {/* Twitter Cards */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:site\" content=\"@digitaljamieson\" />\n        <meta name=\"twitter:creator\" content=\"@digitaljamieson\" />\n        <meta name=\"twitter:title\" content={`${article.title} | Peter Jamieson`} />\n        <meta name=\"twitter:description\" content={`Expert insights from Peter Jamieson, CIO and Digital Transformation Leader. ${article.readTime}.`} />\n        <meta name=\"twitter:image\" content={articleImage} />\n        \n        {/* Structured Data for Article */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"Article\",\n            \"headline\": article.title,\n            \"description\": `Expert insights from Peter Jamieson on ${article.category.toLowerCase()}`,\n            \"author\": {\n              \"@type\": \"Person\",\n              \"name\": \"Peter Jamieson\",\n              \"jobTitle\": \"Chief Information Officer\",\n              \"url\": \"https://jamieson.digital\",\n              \"sameAs\": [\n                \"https://linkedin.com/in/pjamieson\",\n                \"https://twitter.com/digitaljamieson\"\n              ]\n            },\n            \"publisher\": {\n              \"@type\": \"Person\",\n              \"name\": \"Peter Jamieson\",\n              \"logo\": {\n                \"@type\": \"ImageObject\",\n                \"url\": \"https://jamieson.digital/logo.png\"\n              }\n            },\n            \"datePublished\": `${article.publishDate}-01T00:00:00Z`,\n            \"dateModified\": `${article.publishDate}-01T00:00:00Z`,\n            \"mainEntityOfPage\": {\n              \"@type\": \"WebPage\",\n              \"@id\": articleUrl\n            },\n            \"image\": {\n              \"@type\": \"ImageObject\",\n              \"url\": articleImage,\n              \"width\": 1200,\n              \"height\": 630\n            },\n            \"articleSection\": article.category,\n            \"keywords\": \"Digital Transformation, Technology Leadership, AI, Enterprise Architecture, CIO\",\n            \"wordCount\": article.content.split(' ').length,\n            \"timeRequired\": article.readTime,\n            \"about\": {\n              \"@type\": \"Thing\",\n              \"name\": article.category\n            }\n          })}\n        </script>\n        \n        {/* Breadcrumb Structured Data */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"BreadcrumbList\",\n            \"itemListElement\": [\n              {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Home\",\n                \"item\": \"https://jamieson.digital/\"\n              },\n              {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Articles\",\n                \"item\": \"https://jamieson.digital/#articles\"\n              },\n              {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": article.title\n              }\n            ]\n          })}\n        </script>\n      </Helmet>\n      \n      <Navigation />\n      \n      {/* Breadcrumb Navigation */}\n      <nav aria-label=\"Breadcrumb\" className=\"pt-20 pb-4 px-6 lg:px-8 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto\">\n          <ol className=\"flex items-center space-x-2 text-sm text-apple-gray\">\n            <li>\n              <Link href=\"/\" className=\"hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded px-1 transition-colors\">\n                Home\n              </Link>\n            </li>\n            <li>\n              <span className=\"mx-2\">/</span>\n            </li>\n            <li>\n              <Link href=\"/#articles\" className=\"hover:text-apple-blue focus:text-apple-blue focus:outline-none focus:ring-2 focus:ring-apple-blue focus:ring-offset-2 rounded px-1 transition-colors\">\n                Articles\n              </Link>\n            </li>\n            <li>\n              <span className=\"mx-2\">/</span>\n            </li>\n            <li className=\"text-apple-text font-medium\" aria-current=\"page\">\n              {article?.title || \"Article\"}\n            </li>\n          </ol>\n        </div>\n      </nav>\n      \n      <main id=\"main-content\" role=\"main\">\n      <article className=\"max-w-4xl mx-auto px-6 lg:px-8 pt-8 pb-20\" itemScope itemType=\"https://schema.org/Article\">\n        {/* Back button */}\n        <Link href=\"/\" className=\"inline-flex items-center text-apple-blue hover:text-blue-700 mb-8 transition-colors\">\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          Back to Articles\n        </Link>\n        \n        {/* Article header */}\n        <header className=\"mb-12\">\n          <div className=\"flex flex-wrap items-center gap-4 text-sm text-apple-gray mb-6\">\n            <div className=\"flex items-center\">\n              <Tag className=\"w-4 h-4 mr-2\" />\n              {article.category}\n            </div>\n            <div className=\"flex items-center\">\n              <Clock className=\"w-4 h-4 mr-2\" />\n              {article.readTime}\n            </div>\n            <div className=\"flex items-center\">\n              <Calendar className=\"w-4 h-4 mr-2\" />\n              {article.publishDate}\n            </div>\n          </div>\n          \n          <h1 className=\"text-4xl md:text-5xl font-bold text-apple-text tracking-tight mb-6\">\n            {article.title}\n          </h1>\n          \n          <div className=\"flex items-center\">\n            <div className=\"text-apple-gray\">\n              By <span className=\"font-semibold text-apple-text\">{article.author}</span>\n            </div>\n          </div>\n        </header>\n        \n        {/* Article content */}\n        <div \n          className=\"prose prose-lg prose-blue max-w-none\n                     prose-headings:text-apple-text prose-headings:font-bold prose-headings:tracking-tight\n                     prose-p:text-apple-text prose-p:leading-relaxed\n                     prose-li:text-apple-text\n                     prose-blockquote:border-l-apple-blue prose-blockquote:bg-blue-50 prose-blockquote:italic\n                     prose-strong:text-apple-text\n                     prose-a:text-apple-blue hover:prose-a:text-blue-700\"\n          dangerouslySetInnerHTML={{ __html: article.content }}\n        />\n        \n        {/* Author bio section */}\n        <div className=\"mt-16 pt-8 border-t border-gray-200\">\n          <div className=\"bg-gray-50 rounded-2xl p-8\">\n            <h3 className=\"text-xl font-bold text-apple-text mb-4\">About the Author</h3>\n            <p className=\"text-apple-gray leading-relaxed\">\n              Peter Jamieson is a Chief Information Officer and Digital Transformation Leader with extensive experience \n              across retail, real estate, government, and construction sectors. Based in Dubai, UAE, he specializes in \n              enterprise architecture, cloud strategy, and platform integration.\n            </p>\n            <div className=\"mt-4\">\n              <Link \n                href=\"/\" \n                onClick={() => {\n                  setTimeout(() => {\n                    const contactSection = document.getElementById('contact');\n                    if (contactSection) {\n                      contactSection.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                    }\n                  }, 100);\n                }}\n                className=\"text-apple-blue hover:text-blue-700 font-semibold\"\n              >\n                Connect with Peter →\n              </Link>\n            </div>\n          </div>\n        </div>\n      </article>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}","size_bytes":41290},"client/src/pages/home.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport HeroSection from \"@/components/hero-section\";\nimport AboutSection from \"@/components/about-section\";\nimport ArticlesSection from \"@/components/articles-section\";\nimport ExpertiseSection from \"@/components/expertise-section\";\nimport ExperienceSection from \"@/components/experience-section\";\nimport ContactSection from \"@/components/contact-section\";\nimport Footer from \"@/components/footer\";\nimport { useEffect } from \"react\";\n\nexport default function Home() {\n  useEffect(() => {\n    // Smooth scrolling behavior\n    const handleAnchorClick = (e: Event) => {\n      const target = e.target as HTMLAnchorElement;\n      if (target.href && target.href.includes('#')) {\n        e.preventDefault();\n        const element = document.querySelector(target.getAttribute('href')!);\n        if (element) {\n          element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }\n      }\n    };\n\n    document.addEventListener('click', handleAnchorClick);\n    return () => document.removeEventListener('click', handleAnchorClick);\n  }, []);\n\n  useEffect(() => {\n    // Section fade-in animation\n    const observerOptions = {\n      threshold: 0.1,\n      rootMargin: '0px 0px -50px 0px'\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('visible');\n        }\n      });\n    }, observerOptions);\n\n    document.querySelectorAll('.section-fade').forEach(section => {\n      observer.observe(section);\n    });\n\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <div className=\"bg-apple-bg font-sans\">\n      <Navigation />\n      <main id=\"main-content\" role=\"main\">\n        <HeroSection />\n        <AboutSection />\n        <ArticlesSection />\n        <ExpertiseSection />\n        <ExperienceSection />\n        <ContactSection />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":1964},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { AlertCircle, Home, ArrowLeft, Search } from \"lucide-react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport default function NotFound() {\n  const [location] = useLocation();\n  \n  return (\n    <>\n      <Helmet>\n        <title>404 - Page Not Found | Peter Jamieson</title>\n        <meta name=\"description\" content=\"The page you're looking for could not be found. Return to the homepage to explore Peter Jamieson's portfolio.\" />\n      </Helmet>\n      \n      <div className=\"min-h-screen w-full flex items-center justify-center bg-gradient-to-br from-slate-50 to-slate-100 dark:from-slate-900 dark:to-slate-800\">\n        <Card className=\"w-full max-w-lg mx-4 shadow-xl border-0 bg-white/90 dark:bg-slate-900/90 backdrop-blur-sm\">\n          <CardContent className=\"pt-8 pb-8\">\n            <div className=\"text-center space-y-6\">\n              {/* Error Icon and Code */}\n              <div className=\"flex items-center justify-center space-x-4\">\n                <div className=\"relative\">\n                  <div className=\"w-16 h-16 rounded-full bg-red-100 dark:bg-red-900/30 flex items-center justify-center\">\n                    <AlertCircle className=\"h-8 w-8 text-red-500 dark:text-red-400\" />\n                  </div>\n                  <div className=\"absolute -top-1 -right-1 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white text-xs font-bold\">!</span>\n                  </div>\n                </div>\n                <div>\n                  <div className=\"text-6xl font-bold text-slate-800 dark:text-slate-200 leading-none\">404</div>\n                </div>\n              </div>\n              \n              {/* Error Message */}\n              <div className=\"space-y-2\">\n                <h1 className=\"text-2xl font-bold text-slate-900 dark:text-slate-100\">\n                  Page Not Found\n                </h1>\n                <p className=\"text-slate-600 dark:text-slate-400 max-w-sm mx-auto\">\n                  The page you're looking for doesn't exist or has been moved.\n                </p>\n                {location && location !== '/' && (\n                  <p className=\"text-sm text-slate-500 dark:text-slate-500 font-mono bg-slate-100 dark:bg-slate-800 px-3 py-1 rounded-md inline-block\">\n                    {location}\n                  </p>\n                )}\n              </div>\n              \n              {/* Action Buttons */}\n              <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\n                <Button asChild className=\"flex-1\">\n                  <Link href=\"/\">\n                    <Home className=\"w-4 h-4 mr-2\" />\n                    Go Home\n                  </Link>\n                </Button>\n                \n                <Button \n                  variant=\"outline\" \n                  onClick={() => window.history.back()}\n                  className=\"flex-1\"\n                >\n                  <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                  Go Back\n                </Button>\n              </div>\n              \n              {/* Helpful Links */}\n              <div className=\"pt-4 border-t border-slate-200 dark:border-slate-700\">\n                <p className=\"text-sm text-slate-500 dark:text-slate-400 mb-3\">\n                  Or explore these sections:\n                </p>\n                <div className=\"flex flex-wrap gap-2 justify-center\">\n                  <Button asChild variant=\"ghost\" size=\"sm\">\n                    <Link href=\"/#about\">\n                      About\n                    </Link>\n                  </Button>\n                  <Button asChild variant=\"ghost\" size=\"sm\">\n                    <Link href=\"/#expertise\">\n                      Expertise\n                    </Link>\n                  </Button>\n                  <Button asChild variant=\"ghost\" size=\"sm\">\n                    <Link href=\"/#experience\">\n                      Experience\n                    </Link>\n                  </Button>\n                  <Button asChild variant=\"ghost\" size=\"sm\">\n                    <Link href=\"/#contact\">\n                      Contact\n                    </Link>\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </>\n  );\n}\n","size_bytes":4443},"client/src/pages/server-error.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { AlertTriangle, Home, RefreshCw, Mail } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { Helmet } from \"react-helmet-async\";\n\ninterface ServerErrorProps {\n  status?: number;\n  message?: string;\n  canRetry?: boolean;\n}\n\nexport default function ServerError({ \n  status = 500, \n  message = \"An internal server error occurred.\",\n  canRetry = true\n}: ServerErrorProps) {\n  \n  const getErrorColor = (status: number) => {\n    if (status >= 500) return \"red\"; // Server errors\n    if (status >= 400) return \"orange\"; // Client errors\n    return \"slate\"; // Default\n  };\n  \n  const getErrorDescription = (status: number) => {\n    switch (status) {\n      case 400:\n        return \"The request was invalid or malformed.\";\n      case 401:\n        return \"Authentication is required to access this resource.\";\n      case 403:\n        return \"You don't have permission to access this resource.\";\n      case 404:\n        return \"The requested resource could not be found.\";\n      case 429:\n        return \"Too many requests. Please try again later.\";\n      case 500:\n        return \"An internal server error occurred. We're working to fix it.\";\n      case 502:\n        return \"The server received an invalid response from upstream.\";\n      case 503:\n        return \"The service is temporarily unavailable for maintenance.\";\n      case 504:\n        return \"The server request timed out.\";\n      default:\n        return message || \"An unexpected error occurred.\";\n    }\n  };\n\n  const errorColor = getErrorColor(status);\n  const description = getErrorDescription(status);\n\n  return (\n    <>\n      <Helmet>\n        <title>{status} - Server Error | Peter Jamieson</title>\n        <meta name=\"description\" content={description} />\n      </Helmet>\n      \n      <div className={`min-h-screen w-full flex items-center justify-center bg-gradient-to-br from-${errorColor}-50 to-${errorColor}-100 dark:from-${errorColor}-950 dark:to-${errorColor}-900`}>\n        <Card className=\"w-full max-w-lg mx-4 shadow-xl border-0 bg-white/90 dark:bg-slate-900/90 backdrop-blur-sm\">\n          <CardContent className=\"pt-8 pb-8\">\n            <div className=\"text-center space-y-6\">\n              {/* Error Icon and Code */}\n              <div className=\"flex items-center justify-center space-x-4\">\n                <div className=\"relative\">\n                  <div className={`w-16 h-16 rounded-full bg-${errorColor}-100 dark:bg-${errorColor}-900/30 flex items-center justify-center`}>\n                    <AlertTriangle className={`h-8 w-8 text-${errorColor}-500 dark:text-${errorColor}-400`} />\n                  </div>\n                  <div className={`absolute -top-1 -right-1 w-6 h-6 bg-${errorColor}-500 rounded-full flex items-center justify-center`}>\n                    <span className=\"text-white text-xs font-bold\">!</span>\n                  </div>\n                </div>\n                <div>\n                  <div className=\"text-6xl font-bold text-slate-800 dark:text-slate-200 leading-none\">\n                    {status}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Error Message */}\n              <div className=\"space-y-2\">\n                <h1 className=\"text-2xl font-bold text-slate-900 dark:text-slate-100\">\n                  {status >= 500 ? 'Server Error' : 'Request Error'}\n                </h1>\n                <p className=\"text-slate-600 dark:text-slate-400 max-w-sm mx-auto\">\n                  {description}\n                </p>\n              </div>\n              \n              {/* Action Buttons */}\n              <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\n                {canRetry && (\n                  <Button \n                    onClick={() => window.location.reload()}\n                    className=\"flex-1\"\n                  >\n                    <RefreshCw className=\"w-4 h-4 mr-2\" />\n                    Try Again\n                  </Button>\n                )}\n                \n                <Button asChild variant=\"outline\" className=\"flex-1\">\n                  <Link href=\"/\">\n                    <Home className=\"w-4 h-4 mr-2\" />\n                    Go Home\n                  </Link>\n                </Button>\n              </div>\n              \n              {/* Support Information */}\n              {status >= 500 && (\n                <div className=\"pt-4 border-t border-slate-200 dark:border-slate-700\">\n                  <p className=\"text-sm text-slate-500 dark:text-slate-400 mb-3\">\n                    If this problem persists, please contact support:\n                  </p>\n                  <Button asChild variant=\"ghost\" size=\"sm\">\n                    <Link href=\"/#contact\">\n                      <Mail className=\"w-4 h-4 mr-2\" />\n                      Contact Support\n                    </Link>\n                  </Button>\n                </div>\n              )}\n              \n              {/* Maintenance Notice for 503 */}\n              {status === 503 && (\n                <div className=\"pt-4 border-t border-slate-200 dark:border-slate-700\">\n                  <p className=\"text-sm text-slate-500 dark:text-slate-400\">\n                    We're performing scheduled maintenance and will be back shortly.\n                  </p>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </>\n  );\n}","size_bytes":5480},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}